'<PCODE "1CLUCG">

"***** CLU COMPILER 2.14 ***** 2/21/77 14:30 *****" 

<OR <BOUND? PROCLIST> <SET PROCLIST ()>> 

<SET PROCLIST <CONS :CG_MODULE .PROCLIST>> 

<SETG :CG_MODULE  %<RSUBR!- '[ %<PCODE!- "1CLUCG" 0> :CG_MODULE #DECL ("VALUE" 
ATOM ANY <LIST FIX ANY> "OPTIONAL" ANY) :EM$D :IDN$UNMARK :IDN$EQUAL :IDN$MARK 
:EM$RA :EM$RP :CG_TYPESPEC :EM$LPS ARRAY$SIMILAR ARRAY$RETRACTH ARRAY$TOP 
:ENV$GET_CONCRETE_TYPE :ENV$GET_ABSTRACT_TYPE BOOL$AND :ENV$GET_CATCHES_FOM 
:ENV$GET_SIGS_FOM :STMT$EMPTY :TYPESPEC$MAKE_UNKNOWN :TYPESPEC$MAKE_PARM 
:CONST$D :TYPESPEC$PRINT :RETURN-ERROR :TYPESPEC$MAKE_ATYPE :IDN$FAKE BOOL$OR 
:TYPESPEC$MAKE_BAD :TYPESPEC$GET_ARRAY :TYPESPEC$MAKE_PROC :TYPESPEC$NICEFY 
:TYPESPEC$U :TYPESPEC$GET_ATYPE :TYPESPEC$IS_ATYPE :GT_REF :TYPESPEC$MAKE_TYPE 
:TYPESPEC$MAKE_STRING :TYPESPEC$MAKE_CHAR :TYPESPEC$MAKE_NULL :TYPESPEC$MAKE_INT
 :TYPESPEC$MAKE_ARRAY :TYPESPEC$MAKE_BOOL :EXPR$GET_TYPE :IN_SYSTEM 
ARRAY$PREDICT STRING$CN :NAME$U STRING$SUBSTR :CONST$GET_TYPE :CONST$IS_TYPE 
:BPUTSUC :BPUTI :BPUTC :BPUTS :ERR1 STRING$REST :ZEN$GET_INTS :ZEN$GET_CHARS 
:ZEN$GET_STRINGS :ZEN$NEXT_STRING INT$MOD :ZEN$GET_STRLITS :ESCAPES2OCTAL :I2SP 
:ZEN$NEXT_CONST :ZEN$NEXT_TYPE ARRAY$EXTENDH :STRINGID$VALUE :NAME$EQUAL 
:TYPESPEC$DN :EXPR$U :IDN$FAKE_VAR :IDN$IS_CHANGED :IDN$CLEAR_CHANGE 
:IDN$IS_MARKED ARRAY$BOTTOM :ZEN$GET_CVT_ARRAY :TG_TYPELIST :ZEN$NEXT_LABEL 
:IDN$SET_CHANGE NEWARR :IDN$GET_TYPE :DU$GET_UNIQUE :NAME$D :EXPR$D 
:ZEN$NEXT_PROC :IDN$GET_LBL :IDN$SET_LBL :TG_EXTYPE :DECL$LINENO :DECL$D 
:ZEN$ADD_VAR :ZEN$NEXT_VAR :I2S :STMT$LINENO :STMT$D ARRAY$STORE 
:ZEN$SET_CVT_ARRAY ARRAY$FILL :TYPESPEC$EQUAL :ZEN$ADD_HEAD :ZEN$GET_VINITS 
:ZEN$GET_VARS :ZEN$GET_VNAMES ARRAY$SIZE :TYPESPEC$GET_PROC :FIXB 
:ZEN$ADD_PMTYPE :TG_PMTYPE :IDN$GETSTRING ARRAY$FETCH ARRAY$LOW :TG_TYPE 
ARRAY$HIGH DONE "cluster " "$" T "retsulc " "" "," ";						"
 "proc" "$rtnc $none" "corp " "proc " ";				" 
"Bad statement to cg_stmt" "tbad" "$catch " "$uncatch " "(er)," "$except " 
"Oneup fed to cg_invoke" "Recget fed to cg_invoke" "Recput fed to cg_invoke" 
"massn [" "store" "put_" "Invalid left-hand-side of assignment" "$loop" "$iff" 
"$then $go " "$fi" "$pool" "$label " "$ift" "$then" "$else" "signal " 
"Number of return values does not match declaration." "$rtn rr" "$mrtn " "$for "
 "int_from_to_by" "int_from_by" "$rof " "$tagcase " "$tag [" "$tag []" 
"$etagcase " "caselcl" "$if" "$elf" "$test" "$test$then$else" "$test$then$elf" 
"equal" "lt" "gt" "bool$not" "xcall " "Identifier not a valid selector: " "add" 
"sub" "mul" "div" "power" "and" "or" "concat" "mod" "not" "minus" "fill" "get_" 
"fetch" "Illegal expression to cg_expr" "(er)" "Got an undec in cg_idn" "int$" 
"string$" "char$" "bool$" "proc$" "null$" "Bad typespec given to cg_clucall" 
"call [" ![!] "cons" "[" "]" "Oneof$make_* objects are not implemented" 
"Record$get_* objects are not implemented" 
"Record$put_* objects are not implemented" "pdesc " "typarg [" "typreg rr," 
"link " "(lr)" "args [" "assn rr" "tbool+" "true" "false" "tchar+" "tint+" 
"$null" "string " "$nulls" "$zero" "$one" "$two" "$true" "$false" "$nil" "$type"
 ";" "]" "assn " "(er),rr" "assn rr," "(er)" "call " "." "icall " "args [rr]" 
"cvtup rr" "cvtdown rr" " is a bad operation name for this recordtype." 
"Illegal expression given to gt_expr" 
"Illegal procedure object given to gt_invoke" 
"Type not a procedure type: gt_call" "Tag " " undefined" not_array 
"Attempt to perform array fetch on non-array" "Bad record operation: " 
"Type of externally declared identifier unknown: " " gt_idn" "similar" 
"similar1" "equiv" "copy" "decode" "copy1" "encode" 
"Encode operation returns nothing" "size" "index" "indexs" "indexc" "rest" 
"substr" "ac2s" "append" "c2s" "s2ac" "cn" "i2c" "c2i" "odd" "create" "new" 
"predict" "fill_copy" "high" "low" "Unrecognized operation '" "' on type " 
"Bad const to GT_CONST" "clu" ":" "r" "o" R$2620$2$0 "<SETG " "'" ":RECORD" 
":ONEOF" "Internal error in ZEN$CURTYPE: no type for " ";DSK:STAMP >" F TO 
"READ" C I]>> 
<AND <ASSIGNED? GLUE> .GLUE <PUT ,:CG_MODULE PGLUE ![715827882 -22906492246 
-22906492246 -22906492246 -22906492246 -22906492246 -22905094145 -1 -1 -1 -1 -1 
-1 -1 -1 -1 -65536 0 0!]>> 


<SET PROCLIST <CONS :CG_CLUSTER .PROCLIST>> 

<SETG :CG_CLUSTER %<RSUBR-ENTRY '[:CG_MODULE :CG_CLUSTER #DECL ("VALUE" ATOM ANY
<VECTOR ANY <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR 
UVECTOR FIX FIX FIX>> STRING "OPTIONAL" ANY)] 82>> 

<SET PROCLIST <CONS :CG_CLUPARMS .PROCLIST>> 

<SETG :CG_CLUPARMS %<RSUBR-ENTRY '[:CG_MODULE :CG_CLUPARMS #DECL ("VALUE" <LIST 
[2 STRING]> ANY <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 353>> 

<SETG :CG_CLUPARMS$TYPE (:STRING :STRING)> 

<SET PROCLIST <CONS :CG_PROC .PROCLIST>> 

<SETG :CG_PROC %<RSUBR-ENTRY '[:CG_MODULE :CG_PROC #DECL ("VALUE" ATOM ANY <
VECTOR <VECTOR UVECTOR FIX FIX FIX> ANY <VECTOR UVECTOR FIX FIX FIX> <VECTOR 
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX>> STRING <OR ATOM FALSE> 
"OPTIONAL" ANY)] 556>> 

<SET PROCLIST <CONS :CG_ARGSTUFF .PROCLIST>> 

<SETG :CG_ARGSTUFF %<RSUBR-ENTRY '[:CG_MODULE :CG_ARGSTUFF #DECL ("VALUE" <LIST 
[2 STRING]> ANY <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <OR 
ATOM FALSE> "OPTIONAL" ANY)] 777>> 

<SETG :CG_ARGSTUFF$TYPE (:STRING :STRING)> 

<SET PROCLIST <CONS :CG_RTNTYPES .PROCLIST>> 

<SETG :CG_RTNTYPES %<RSUBR-ENTRY '[:CG_MODULE :CG_RTNTYPES #DECL ("VALUE" ATOM 
ANY <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <OR ATOM FALSE> 
"OPTIONAL" ANY)] 997>> 

<SET PROCLIST <CONS :CG_STMT .PROCLIST>> 

<SETG :CG_STMT %<RSUBR-ENTRY '[:CG_MODULE :CG_STMT #DECL ("VALUE" ATOM ANY ANY 
"OPTIONAL" ANY)] 1112>> 

<SET PROCLIST <CONS :CG_EXCEPTSTMT .PROCLIST>> 

<SETG :CG_EXCEPTSTMT %<RSUBR-ENTRY '[:CG_MODULE :CG_EXCEPTSTMT #DECL ("VALUE" 
ATOM ANY <VECTOR <VECTOR UVECTOR FIX FIX FIX> ANY> "OPTIONAL" ANY)] 1342>> 

<SET PROCLIST <CONS :CG_BODY .PROCLIST>> 

<SETG :CG_BODY %<RSUBR-ENTRY '[:CG_MODULE :CG_BODY #DECL ("VALUE" ATOM ANY <
VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 1415>> 

<SET PROCLIST <CONS :CG_DECL .PROCLIST>> 

<SETG :CG_DECL %<RSUBR-ENTRY '[:CG_MODULE :CG_DECL #DECL ("VALUE" ATOM ANY ANY 
"OPTIONAL" ANY)] 1527>> 

<SET PROCLIST <CONS :CG_NORMDECL .PROCLIST>> 

<SETG :CG_NORMDECL %<RSUBR-ENTRY '[:CG_MODULE :CG_NORMDECL #DECL ("VALUE" ATOM 
ANY <VECTOR <LIST FIX ANY> <VECTOR UVECTOR FIX FIX FIX> ANY> "OPTIONAL" ANY)] 
1637>> 

<SET PROCLIST <CONS :CG_EXCEPTDECL .PROCLIST>> 

<SETG :CG_EXCEPTDECL %<RSUBR-ENTRY '[:CG_MODULE :CG_EXCEPTDECL #DECL ("VALUE" 
ATOM ANY <VECTOR ANY <VECTOR UVECTOR FIX FIX FIX>> "OPTIONAL" ANY)] 1803>> 

<SET PROCLIST <CONS :CG_HANDLERLIST .PROCLIST>> 

<SETG :CG_HANDLERLIST %<RSUBR-ENTRY '[:CG_MODULE :CG_HANDLERLIST #DECL ("VALUE" 
ATOM ANY <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 1876>> 

<SET PROCLIST <CONS :CG_VAR .PROCLIST>> 

<SETG :CG_VAR %<RSUBR-ENTRY '[:CG_MODULE :CG_VAR #DECL ("VALUE" STRING ANY ANY 
"OPTIONAL" ANY)] 2147>> 

<SETG :CG_VAR$TYPE :STRING> 

<SET PROCLIST <CONS :CG_PROC_LBL .PROCLIST>> 

<SETG :CG_PROC_LBL %<RSUBR-ENTRY '[:CG_MODULE :CG_PROC_LBL #DECL ("VALUE" STRING
ANY ANY "OPTIONAL" ANY)] 2191>> 

<SETG :CG_PROC_LBL$TYPE :STRING> 

"***** CLU COMPILER 2.14 ***** 3/18/77 10:00 *****" 

<OR <BOUND? PROCLIST> <SET PROCLIST ()>> 

<SET PROCLIST <CONS :CG_INVOKE .PROCLIST>> 

<SETG :CG_INVOKE %<RSUBR-ENTRY '[:CG_MODULE :CG_INVOKE #DECL ("VALUE" ATOM ANY <
VECTOR <VECTOR UVECTOR FIX FIX FIX> ANY> "OPTIONAL" ANY)] 2244>> 

<SET PROCLIST <CONS :CG_MASSN .PROCLIST>> 

<SETG :CG_MASSN %<RSUBR-ENTRY '[:CG_MODULE :CG_MASSN #DECL ("VALUE" ATOM ANY <
VECTOR <VECTOR UVECTOR FIX FIX FIX> VECTOR> "OPTIONAL" ANY)] 2441>> 

<SET PROCLIST <CONS :CG_ASSN .PROCLIST>> 

<SETG :CG_ASSN %<RSUBR-ENTRY '[:CG_MODULE :CG_ASSN #DECL ("VALUE" ATOM ANY <
VECTOR ANY ANY> "OPTIONAL" ANY)] 2551>> 

<SET PROCLIST <CONS :CG_WHILEST .PROCLIST>> 

<SETG :CG_WHILEST %<RSUBR-ENTRY '[:CG_MODULE :CG_WHILEST #DECL ("VALUE" ATOM ANY
<VECTOR ANY ANY> "OPTIONAL" ANY)] 2726>> 

<SET PROCLIST <CONS :CG_REPEATST .PROCLIST>> 

<SETG :CG_REPEATST %<RSUBR-ENTRY '[:CG_MODULE :CG_REPEATST #DECL ("VALUE" ATOM 
ANY <VECTOR ANY ANY> "OPTIONAL" ANY)] 2804>> 

<SET PROCLIST <CONS :CG_IFST .PROCLIST>> 

<SETG :CG_IFST %<RSUBR-ENTRY '[:CG_MODULE :CG_IFST #DECL ("VALUE" ATOM ANY <
VECTOR ANY ANY ANY> "OPTIONAL" ANY)] 2882>> 

<SET PROCLIST <CONS :CG_SIGSTMT .PROCLIST>> 

<SETG :CG_SIGSTMT %<RSUBR-ENTRY '[:CG_MODULE :CG_SIGSTMT #DECL ("VALUE" ATOM ANY
<VECTOR <VECTOR UVECTOR FIX FIX FIX> ANY> "OPTIONAL" ANY)] 2955>> 

<SET PROCLIST <CONS :CG_RTN .PROCLIST>> 

<SETG :CG_RTN %<RSUBR-ENTRY '[:CG_MODULE :CG_RTN #DECL ("VALUE" ATOM ANY <VECTOR
UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 3032>> 

<SET PROCLIST <CONS :CG_FORST .PROCLIST>> 

<SETG :CG_FORST %<RSUBR-ENTRY '[:CG_MODULE :CG_FORST #DECL ("VALUE" ATOM ANY <
VECTOR ANY <LIST FIX ANY> <LIST FIX ANY> <LIST FIX ANY> ANY ANY ANY> <OR ATOM 
FALSE> "OPTIONAL" ANY)] 3223>> 

<SET PROCLIST <CONS :CG_TAGST .PROCLIST>> 

<SETG :CG_TAGST %<RSUBR-ENTRY '[:CG_MODULE :CG_TAGST #DECL ("VALUE" ATOM ANY <
VECTOR <VECTOR UVECTOR FIX FIX FIX> <LIST FIX ANY> ANY> "OPTIONAL" ANY)] 3493>> 

<SET PROCLIST <CONS :CG_CASEST .PROCLIST>> 

<SETG :CG_CASEST %<RSUBR-ENTRY '[:CG_MODULE :CG_CASEST #DECL ("VALUE" ATOM ANY <
VECTOR <VECTOR UVECTOR FIX FIX FIX> ANY <LIST FIX ANY>> "OPTIONAL" ANY)] 3791>> 

<SET PROCLIST <CONS :CG_TRIGLIST .PROCLIST>> 

<SETG :CG_TRIGLIST %<RSUBR-ENTRY '[:CG_MODULE :CG_TRIGLIST #DECL ("VALUE" ATOM 
ANY <VECTOR UVECTOR FIX FIX FIX> ANY "OPTIONAL" ANY)] 4027>> 

<SET PROCLIST <CONS :CG_APPLY .PROCLIST>> 

<SETG :CG_APPLY %<RSUBR-ENTRY '[:CG_MODULE :CG_APPLY #DECL ("VALUE" ATOM ANY ANY
<VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 4254>> 

<SET PROCLIST <CONS :CG_SEL .PROCLIST>> 

<SETG :CG_SEL %<RSUBR-ENTRY '[:CG_MODULE :CG_SEL #DECL ("VALUE" FIX ANY ANY ANY 
"OPTIONAL" ANY)] 4330>> 

<SETG :CG_SEL$TYPE :INT> 

"***** CLU COMPILER 2.14 ***** 4/7/77 22:31 *****" 

<OR <BOUND? PROCLIST> <SET PROCLIST ()>> 

<SET PROCLIST <CONS :CG_EXPR .PROCLIST>> 

<SETG :CG_EXPR %<RSUBR-ENTRY '[:CG_MODULE :CG_EXPR #DECL ("VALUE" ATOM ANY ANY <
OR ATOM FALSE> "OPTIONAL" ANY)] 4468>> 

<SET PROCLIST <CONS :CG_BINEXP .PROCLIST>> 

<SETG :CG_BINEXP %<RSUBR-ENTRY '[:CG_MODULE :CG_BINEXP #DECL ("VALUE" ATOM ANY 
STRING <VECTOR ANY ANY> "OPTIONAL" ANY)] 5014>> 

<SET PROCLIST <CONS :CG_EXPRLIST .PROCLIST>> 

<SETG :CG_EXPRLIST %<RSUBR-ENTRY '[:CG_MODULE :CG_EXPRLIST #DECL ("VALUE" ATOM 
ANY <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 5084>> 

<SET PROCLIST <CONS :CG_NOTBIN .PROCLIST>> 

<SETG :CG_NOTBIN %<RSUBR-ENTRY '[:CG_MODULE :CG_NOTBIN #DECL ("VALUE" ATOM ANY 
STRING <VECTOR ANY ANY> "OPTIONAL" ANY)] 5156>> 

<SET PROCLIST <CONS :CG_CONDEXP .PROCLIST>> 

<SETG :CG_CONDEXP %<RSUBR-ENTRY '[:CG_MODULE :CG_CONDEXP #DECL ("VALUE" ATOM ANY
<VECTOR ANY ANY ANY> "OPTIONAL" ANY)] 5201>> 

<SET PROCLIST <CONS :CG_IDN .PROCLIST>> 

<SETG :CG_IDN %<RSUBR-ENTRY '[:CG_MODULE :CG_IDN #DECL ("VALUE" ATOM ANY ANY <OR
ATOM FALSE> "OPTIONAL" ANY)] 5268>> 

<SET PROCLIST <CONS :CG_CLUCALL .PROCLIST>> 

<SETG :CG_CLUCALL %<RSUBR-ENTRY '[:CG_MODULE :CG_CLUCALL #DECL ("VALUE" ATOM ANY
ANY STRING <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 5357>> 

<SET PROCLIST <CONS :CG_CALL .PROCLIST>> 

<SETG :CG_CALL %<RSUBR-ENTRY '[:CG_MODULE :CG_CALL #DECL ("VALUE" ATOM ANY 
STRING <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 5594>> 

<SET PROCLIST <CONS :CG_PTCALL .PROCLIST>> 

<SETG :CG_PTCALL %<RSUBR-ENTRY '[:CG_MODULE :CG_PTCALL #DECL ("VALUE" ATOM ANY 
STRING <VECTOR UVECTOR FIX FIX FIX> ANY "OPTIONAL" ANY)] 5638>> 

<SET PROCLIST <CONS :CG_PT_CALL .PROCLIST>> 

<SETG :CG_PT_CALL %<RSUBR-ENTRY '[:CG_MODULE :CG_PT_CALL #DECL ("VALUE" ATOM ANY
STRING FIX ANY "OPTIONAL" ANY)] 5686>> 

<SET PROCLIST <CONS :CG_DU .PROCLIST>> 

<SETG :CG_DU %<RSUBR-ENTRY '[:CG_MODULE :CG_DU #DECL ("VALUE" ATOM ANY ANY <OR 
ATOM FALSE> "OPTIONAL" ANY)] 5742>> 

<SET PROCLIST <CONS :CG_RECCON .PROCLIST>> 

<SETG :CG_RECCON %<RSUBR-ENTRY '[:CG_MODULE :CG_RECCON #DECL ("VALUE" ATOM ANY <
VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 5786>> 

<SET PROCLIST <CONS :CG_ARRCON .PROCLIST>> 

<SETG :CG_ARRCON %<RSUBR-ENTRY '[:CG_MODULE :CG_ARRCON #DECL ("VALUE" ATOM ANY <
VECTOR ANY <VECTOR UVECTOR FIX FIX FIX>> "OPTIONAL" ANY)] 6103>> 

<SET PROCLIST <CONS :CG_OP .PROCLIST>> 

<SETG :CG_OP %<RSUBR-ENTRY '[:CG_MODULE :CG_OP #DECL ("VALUE" ATOM ANY <VECTOR 
ANY ANY> <OR ATOM FALSE> "OPTIONAL" ANY)] 6173>> 

<SET PROCLIST <CONS :CG_ONEUP .PROCLIST>> 

<SETG :CG_ONEUP %<RSUBR-ENTRY '[:CG_MODULE :CG_ONEUP #DECL ("VALUE" ATOM ANY FIX
"OPTIONAL" ANY)] 6299>> 

<SET PROCLIST <CONS :CG_RECGET .PROCLIST>> 

<SETG :CG_RECGET %<RSUBR-ENTRY '[:CG_MODULE :CG_RECGET #DECL ("VALUE" ATOM ANY 
FIX "OPTIONAL" ANY)] 6335>> 

<SET PROCLIST <CONS :CG_RECPUT .PROCLIST>> 

<SETG :CG_RECPUT %<RSUBR-ENTRY '[:CG_MODULE :CG_RECPUT #DECL ("VALUE" ATOM ANY 
FIX "OPTIONAL" ANY)] 6371>> 

<SET PROCLIST <CONS :CG_PDESC .PROCLIST>> 

<SETG :CG_PDESC %<RSUBR-ENTRY '[:CG_MODULE :CG_PDESC #DECL ("VALUE" ATOM ANY 
STRING <OR ATOM FALSE> "OPTIONAL" ANY)] 6407>> 

<SET PROCLIST <CONS :CG_TDESC .PROCLIST>> 

<SETG :CG_TDESC %<RSUBR-ENTRY '[:CG_MODULE :CG_TDESC #DECL ("VALUE" ATOM ANY 
STRING <OR ATOM FALSE> "OPTIONAL" ANY)] 6463>> 

"***** CLU COMPILER 2.14 ***** 2/4/77 10:55 *****" 

<OR <BOUND? PROCLIST> <SET PROCLIST ()>> 

<SET PROCLIST <CONS :CG_CONST .PROCLIST>> 

<SETG :CG_CONST %<RSUBR-ENTRY '[:CG_MODULE :CG_CONST #DECL ("VALUE" STRING ANY 
STRING "OPTIONAL" ANY)] 6514>> 

<SETG :CG_CONST$TYPE :STRING> 

<SET PROCLIST <CONS :CG_VALUE .PROCLIST>> 

<SETG :CG_VALUE %<RSUBR-ENTRY '[:CG_MODULE :CG_VALUE #DECL ("VALUE" ATOM STRING 
<OR ATOM FALSE> "OPTIONAL" ANY)] 6564>> 

<SET PROCLIST <CONS :CG_BOOLCON .PROCLIST>> 

<SETG :CG_BOOLCON %<RSUBR-ENTRY '[:CG_MODULE :CG_BOOLCON #DECL ("VALUE" STRING <
OR ATOM FALSE> "OPTIONAL" ANY)] 6615>> 

<SETG :CG_BOOLCON$TYPE :STRING> 

<SET PROCLIST <CONS :CG_CHARCON .PROCLIST>> 

<SETG :CG_CHARCON %<RSUBR-ENTRY '[:CG_MODULE :CG_CHARCON #DECL ("VALUE" STRING 
CHARACTER "OPTIONAL" ANY)] 6657>> 

<SETG :CG_CHARCON$TYPE :STRING> 

<SET PROCLIST <CONS :CG_STRINGCON .PROCLIST>> 

<SETG :CG_STRINGCON %<RSUBR-ENTRY '[:CG_MODULE :CG_STRINGCON #DECL ("VALUE" 
STRING STRING <OR ATOM FALSE> "OPTIONAL" ANY)] 6695>> 

<SETG :CG_STRINGCON$TYPE :STRING> 

<SET PROCLIST <CONS :CG_INTCON .PROCLIST>> 

<SETG :CG_INTCON %<RSUBR-ENTRY '[:CG_MODULE :CG_INTCON #DECL ("VALUE" STRING FIX
"OPTIONAL" ANY)] 6729>> 

<SETG :CG_INTCON$TYPE :STRING> 

<SET PROCLIST <CONS :CG_NULLCON .PROCLIST>> 

<SETG :CG_NULLCON %<RSUBR-ENTRY '[:CG_MODULE :CG_NULLCON #DECL ("VALUE" STRING 
"OPTIONAL" ANY)] 6767>> 

<SETG :CG_NULLCON$TYPE :STRING> 

<SET PROCLIST <CONS :CG_STRLIT .PROCLIST>> 

<SETG :CG_STRLIT %<RSUBR-ENTRY '[:CG_MODULE :CG_STRLIT #DECL ("VALUE" STRING ANY
STRING <OR ATOM FALSE> "OPTIONAL" ANY)] 6798>> 

<SETG :CG_STRLIT$TYPE :STRING> 

<SET PROCLIST <CONS :CG_STRING .PROCLIST>> 

<SETG :CG_STRING %<RSUBR-ENTRY '[:CG_MODULE :CG_STRING #DECL ("VALUE" STRING ANY
STRING "OPTIONAL" ANY)] 6967>> 

<SETG :CG_STRING$TYPE :STRING> 

<SET PROCLIST <CONS :CG_CHAR .PROCLIST>> 

<SETG :CG_CHAR %<RSUBR-ENTRY '[:CG_MODULE :CG_CHAR #DECL ("VALUE" STRING ANY 
CHARACTER "OPTIONAL" ANY)] 7143>> 

<SETG :CG_CHAR$TYPE :STRING> 

<SET PROCLIST <CONS :CG_INT .PROCLIST>> 

<SETG :CG_INT %<RSUBR-ENTRY '[:CG_MODULE :CG_INT #DECL ("VALUE" STRING ANY FIX 
"OPTIONAL" ANY)] 7305>> 

<SETG :CG_INT$TYPE :STRING> 

<SET PROCLIST <CONS :CG_BOOL .PROCLIST>> 

<SETG :CG_BOOL %<RSUBR-ENTRY '[:CG_MODULE :CG_BOOL #DECL ("VALUE" STRING <OR 
ATOM FALSE> "OPTIONAL" ANY)] 7486>> 

<SETG :CG_BOOL$TYPE :STRING> 

<SET PROCLIST <CONS :CG_NULL .PROCLIST>> 

<SETG :CG_NULL %<RSUBR-ENTRY '[:CG_MODULE :CG_NULL #DECL ("VALUE" STRING 
"OPTIONAL" ANY)] 7522>> 

<SETG :CG_NULL$TYPE :STRING> 

<SET PROCLIST <CONS :CG_IS_PARM .PROCLIST>> 

<SETG :CG_IS_PARM %<RSUBR-ENTRY '[:CG_MODULE :CG_IS_PARM #DECL ("VALUE" <OR ATOM
FALSE> ANY "OPTIONAL" ANY)] 7553>> 

<SETG :CG_IS_PARM$TYPE :BOOL> 

<SET PROCLIST <CONS :CG_IS_FAKE .PROCLIST>> 

<SETG :CG_IS_FAKE %<RSUBR-ENTRY '[:CG_MODULE :CG_IS_FAKE #DECL ("VALUE" <OR ATOM
FALSE> ANY "OPTIONAL" ANY)] 7621>> 

<SETG :CG_IS_FAKE$TYPE :BOOL> 

<SET PROCLIST <CONS :CG_NOT_NULL .PROCLIST>> 

<SETG :CG_NOT_NULL %<RSUBR-ENTRY '[:CG_MODULE :CG_NOT_NULL #DECL ("VALUE" <OR 
ATOM FALSE> ANY "OPTIONAL" ANY)] 7680>> 

<SETG :CG_NOT_NULL$TYPE :BOOL> 

<SET PROCLIST <CONS :OOPS .PROCLIST>> 

<SETG :OOPS %<RSUBR-ENTRY '[:CG_MODULE :OOPS #DECL ("VALUE" ATOM ANY STRING 
"OPTIONAL" ANY)] 7749>> 

"***** CLU COMPILER 2.14 ***** 3/18/77 10:13 *****" 

<OR <BOUND? PROCLIST> <SET PROCLIST ()>> 

<SET PROCLIST <CONS :EM$S .PROCLIST>> 

<SETG :EM$S %<RSUBR-ENTRY '[:CG_MODULE :EM$S #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 7797>> 

<PUTPROP :EM S ,:EM$S> 

<SET PROCLIST <CONS :EM$SC .PROCLIST>> 

<SETG :EM$SC %<RSUBR-ENTRY '[:CG_MODULE :EM$SC #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 7831>> 

<PUTPROP :EM SC ,:EM$SC> 

<SET PROCLIST <CONS :EM$SN .PROCLIST>> 

<SETG :EM$SN %<RSUBR-ENTRY '[:CG_MODULE :EM$SN #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 7869>> 

<PUTPROP :EM SN ,:EM$SN> 

<SET PROCLIST <CONS :EM$C .PROCLIST>> 

<SETG :EM$C %<RSUBR-ENTRY '[:CG_MODULE :EM$C #DECL ("VALUE" ATOM "OPTIONAL" ANY)
] 7907>> 

<PUTPROP :EM C ,:EM$C> 

<SET PROCLIST <CONS :EM$LB .PROCLIST>> 

<SETG :EM$LB %<RSUBR-ENTRY '[:CG_MODULE :EM$LB #DECL ("VALUE" ATOM "OPTIONAL" 
ANY)] 7942>> 

<PUTPROP :EM LB ,:EM$LB> 

<SET PROCLIST <CONS :EM$RB .PROCLIST>> 

<SETG :EM$RB %<RSUBR-ENTRY '[:CG_MODULE :EM$RB #DECL ("VALUE" ATOM "OPTIONAL" 
ANY)] 7977>> 

<PUTPROP :EM RB ,:EM$RB> 

<SET PROCLIST <CONS :EM$RN .PROCLIST>> 

<SETG :EM$RN %<RSUBR-ENTRY '[:CG_MODULE :EM$RN #DECL ("VALUE" ATOM "OPTIONAL" 
ANY)] 8012>> 

<PUTPROP :EM RN ,:EM$RN> 

<SET PROCLIST <CONS :EM$NL .PROCLIST>> 

<SETG :EM$NL %<RSUBR-ENTRY '[:CG_MODULE :EM$NL #DECL ("VALUE" ATOM "OPTIONAL" 
ANY)] 8046>> 

<PUTPROP :EM NL ,:EM$NL> 

<SET PROCLIST <CONS :EM$D .PROCLIST>> 

<SETG :EM$D %<RSUBR-ENTRY '[:CG_MODULE :EM$D #DECL ("VALUE" ATOM STRING STRING 
STRING STRING "OPTIONAL" ANY)] 8081>> 

<PUTPROP :EM D ,:EM$D> 

<SET PROCLIST <CONS :EM$V .PROCLIST>> 

<SETG :EM$V %<RSUBR-ENTRY '[:CG_MODULE :EM$V #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 8135>> 

<PUTPROP :EM V ,:EM$V> 

<SET PROCLIST <CONS :EM$AV .PROCLIST>> 

<SETG :EM$AV %<RSUBR-ENTRY '[:CG_MODULE :EM$AV #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 8172>> 

<PUTPROP :EM AV ,:EM$AV> 

<SET PROCLIST <CONS :EM$VV .PROCLIST>> 

<SETG :EM$VV %<RSUBR-ENTRY '[:CG_MODULE :EM$VV #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 8212>> 

<PUTPROP :EM VV ,:EM$VV> 

<SET PROCLIST <CONS :EM$VN .PROCLIST>> 

<SETG :EM$VN %<RSUBR-ENTRY '[:CG_MODULE :EM$VN #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 8252>> 

<PUTPROP :EM VN ,:EM$VN> 

<SET PROCLIST <CONS :EM$VC .PROCLIST>> 

<SETG :EM$VC %<RSUBR-ENTRY '[:CG_MODULE :EM$VC #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 8289>> 

<PUTPROP :EM VC ,:EM$VC> 

<SET PROCLIST <CONS :EM$CC .PROCLIST>> 

<SETG :EM$CC %<RSUBR-ENTRY '[:CG_MODULE :EM$CC #DECL ("VALUE" ATOM STRING FIX 
"OPTIONAL" ANY)] 8326>> 

<PUTPROP :EM CC ,:EM$CC> 

<SET PROCLIST <CONS :EM$IC .PROCLIST>> 

<SETG :EM$IC %<RSUBR-ENTRY '[:CG_MODULE :EM$IC #DECL ("VALUE" ATOM STRING FIX 
"OPTIONAL" ANY)] 8373>> 

<PUTPROP :EM IC ,:EM$IC> 

<SET PROCLIST <CONS :EM$P .PROCLIST>> 

<SETG :EM$P %<RSUBR-ENTRY '[:CG_MODULE :EM$P #DECL ("VALUE" ATOM "OPTIONAL" ANY)
] 8420>> 

<PUTPROP :EM P ,:EM$P> 

<SET PROCLIST <CONS :EM$K .PROCLIST>> 

<SETG :EM$K %<RSUBR-ENTRY '[:CG_MODULE :EM$K #DECL ("VALUE" ATOM FIX "OPTIONAL" 
ANY)] 8454>> 

<PUTPROP :EM K ,:EM$K> 

<SET PROCLIST <CONS :EM$KN .PROCLIST>> 

<SETG :EM$KN %<RSUBR-ENTRY '[:CG_MODULE :EM$KN #DECL ("VALUE" ATOM FIX 
"OPTIONAL" ANY)] 8492>> 

<PUTPROP :EM KN ,:EM$KN> 

<SET PROCLIST <CONS :EM$LNK .PROCLIST>> 

<SETG :EM$LNK %<RSUBR-ENTRY '[:CG_MODULE :EM$LNK #DECL ("VALUE" ATOM STRING 
STRING STRING "OPTIONAL" ANY)] 8529>> 

<PUTPROP :EM LNK ,:EM$LNK> 

<SET PROCLIST <CONS :EM$U .PROCLIST>> 

<SETG :EM$U %<RSUBR-ENTRY '[:CG_MODULE :EM$U #DECL ("VALUE" ATOM "OPTIONAL" ANY)
] 8577>> 

<PUTPROP :EM U ,:EM$U> 

<SET PROCLIST <CONS :EM$DWN .PROCLIST>> 

<SETG :EM$DWN %<RSUBR-ENTRY '[:CG_MODULE :EM$DWN #DECL ("VALUE" ATOM "OPTIONAL" 
ANY)] 8611>> 

<PUTPROP :EM DWN ,:EM$DWN> 

<SET PROCLIST <CONS :EM$SU .PROCLIST>> 

<SETG :EM$SU %<RSUBR-ENTRY '[:CG_MODULE :EM$SU #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 8645>> 

<PUTPROP :EM SU ,:EM$SU> 

<SET PROCLIST <CONS :EM$SUC .PROCLIST>> 

<SETG :EM$SUC %<RSUBR-ENTRY '[:CG_MODULE :EM$SUC #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 8679>> 

<PUTPROP :EM SUC ,:EM$SUC> 

<SET PROCLIST <CONS :EM$SUN .PROCLIST>> 

<SETG :EM$SUN %<RSUBR-ENTRY '[:CG_MODULE :EM$SUN #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 8717>> 

<PUTPROP :EM SUN ,:EM$SUN> 

<SETG :EM (:EM)> 

"***** CLU COMPILER ***** MONDAY, 25 AUG 1975 12:11 EDT *****" 

<SET REASONABLE T> 

<SET GLUE T> 

<OR <BOUND? PROCLIST> <SET PROCLIST ()>> 

<SET PROCLIST <CONS :GK_FORCE .PROCLIST>> 

<SETG :GK_FORCE %<RSUBR-ENTRY '[:CG_MODULE :GK_FORCE #DECL ("VALUE" ATOM ANY ANY
"OPTIONAL" ANY)] 8755>> 

<SET :GK_FORCE ,:GK_FORCE> 

<SET PROCLIST <CONS :GK_FORCELIST .PROCLIST>> 

<SETG :GK_FORCELIST %<RSUBR-ENTRY '[:CG_MODULE :GK_FORCELIST #DECL ("VALUE" ATOM
ANY <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 8987>> 

<SET :GK_FORCELIST ,:GK_FORCELIST> 

<SET PROCLIST <CONS :GK_FORCEEL .PROCLIST>> 

<SETG :GK_FORCEEL %<RSUBR-ENTRY '[:CG_MODULE :GK_FORCEEL #DECL ("VALUE" ATOM ANY
<VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 9054>> 

<SET :GK_FORCEEL ,:GK_FORCEEL> 

<SET PROCLIST <CONS :GK_TAG .PROCLIST>> 

<SETG :GK_TAG %<RSUBR-ENTRY '[:CG_MODULE :GK_TAG #DECL ("VALUE" FIX ANY <VECTOR 
UVECTOR FIX FIX FIX> ANY "OPTIONAL" ANY)] 9121>> 

<SET :GK_TAG$TYPE :INT> 

<SET :GK_TAG ,:GK_TAG> 

<SET PROCLIST <CONS :GK_RECORDOP .PROCLIST>> 

<SETG :GK_RECORDOP %<RSUBR-ENTRY '[:CG_MODULE :GK_RECORDOP #DECL ("VALUE" FIX 
ANY <VECTOR UVECTOR FIX FIX FIX> STRING "OPTIONAL" ANY)] 9214>> 

<SET :GK_RECORDOP$TYPE :INT> 

<SET :GK_RECORDOP ,:GK_RECORDOP> 

<SET PROCLIST <CONS :GK_IS_FAKE .PROCLIST>> 

<SETG :GK_IS_FAKE %<RSUBR-ENTRY '[:CG_MODULE :GK_IS_FAKE #DECL ("VALUE" <OR ATOM
FALSE> ANY ANY "OPTIONAL" ANY)] 9304>> 

<SET :GK_IS_FAKE$TYPE :BOOL> 

<SET :GK_IS_FAKE ,:GK_IS_FAKE> 

<SET PROCLIST <CONS :GK_IS_PARM .PROCLIST>> 

<SETG :GK_IS_PARM %<RSUBR-ENTRY '[:CG_MODULE :GK_IS_PARM #DECL ("VALUE" <OR ATOM
FALSE> ANY ANY "OPTIONAL" ANY)] 9353>> 

<SET :GK_IS_PARM$TYPE :BOOL> 

<SET :GK_IS_PARM ,:GK_IS_PARM> 

<SET PROCLIST <CONS :GK_IS_LIT .PROCLIST>> 

<SETG :GK_IS_LIT %<RSUBR-ENTRY '[:CG_MODULE :GK_IS_LIT #DECL ("VALUE" <OR ATOM 
FALSE> ANY ANY "OPTIONAL" ANY)] 9398>> 

<SET :GK_IS_LIT$TYPE :BOOL> 

<SET :GK_IS_LIT ,:GK_IS_LIT> 

"Pass 2 for GK done in 123.60018 seconds.
" 

"***** CLU COMPILER 2.14 ***** 3/24/77 10:01 *****" 

<OR <BOUND? PROCLIST> <SET PROCLIST ()>> 

<SET PROCLIST <CONS :GT_EXPRLIST .PROCLIST>> 

<SETG :GT_EXPRLIST %<RSUBR-ENTRY '[:CG_MODULE :GT_EXPRLIST #DECL ("VALUE" <
VECTOR UVECTOR FIX FIX FIX> ANY <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 
9449>> 

<SETG :GT_EXPRLIST$TYPE (:ARRAY :TYPESPEC)> 

<SET PROCLIST <CONS :GT_EXPR .PROCLIST>> 

<SETG :GT_EXPR %<RSUBR-ENTRY '[:CG_MODULE :GT_EXPR #DECL ("VALUE" ANY ANY ANY 
"OPTIONAL" ANY)] 9537>> 

<SETG :GT_EXPR$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_BINEXP .PROCLIST>> 

<SETG :GT_BINEXP %<RSUBR-ENTRY '[:CG_MODULE :GT_BINEXP #DECL ("VALUE" ANY ANY 
ANY ANY "OPTIONAL" ANY)] 9813>> 

<SETG :GT_BINEXP$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_RECCON .PROCLIST>> 

<SETG :GT_RECCON %<RSUBR-ENTRY '[:CG_MODULE :GT_RECCON #DECL ("VALUE" ANY ANY <
VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 9885>> 

<SETG :GT_RECCON$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_ARRCON .PROCLIST>> 

<SETG :GT_ARRCON %<RSUBR-ENTRY '[:CG_MODULE :GT_ARRCON #DECL ("VALUE" ANY ANY <
VECTOR ANY <VECTOR UVECTOR FIX FIX FIX>> "OPTIONAL" ANY)] 10008>> 

<SETG :GT_ARRCON$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_FILL .PROCLIST>> 

<SETG :GT_FILL %<RSUBR-ENTRY '[:CG_MODULE :GT_FILL #DECL ("VALUE" ANY ANY <
VECTOR VECTOR ANY> "OPTIONAL" ANY)] 10049>> 

<SETG :GT_FILL$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_OP .PROCLIST>> 

<SETG :GT_OP %<RSUBR-ENTRY '[:CG_MODULE :GT_OP #DECL ("VALUE" ANY ANY <VECTOR 
ANY ANY> "OPTIONAL" ANY)] 10087>> 

<SETG :GT_OP$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_INVOKE .PROCLIST>> 

<SETG :GT_INVOKE %<RSUBR-ENTRY '[:CG_MODULE :GT_INVOKE #DECL ("VALUE" ANY ANY <
VECTOR <VECTOR UVECTOR FIX FIX FIX> ANY> "OPTIONAL" ANY)] 10149>> 

<SETG :GT_INVOKE$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_CALL .PROCLIST>> 

<SETG :GT_CALL %<RSUBR-ENTRY '[:CG_MODULE :GT_CALL #DECL ("VALUE" ANY ANY ANY 
"OPTIONAL" ANY)] 10273>> 

<SETG :GT_CALL$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_SEL .PROCLIST>> 

<SETG :GT_SEL %<RSUBR-ENTRY '[:CG_MODULE :GT_SEL #DECL ("VALUE" ANY ANY <VECTOR 
ANY ANY> "OPTIONAL" ANY)] 10354>> 

<SETG :GT_SEL$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_TAG .PROCLIST>> 

<SETG :GT_TAG %<RSUBR-ENTRY '[:CG_MODULE :GT_TAG #DECL ("VALUE" ANY ANY ANY ANY 
"OPTIONAL" ANY)] 10397>> 

<SETG :GT_TAG$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_REF .PROCLIST>> 

<SETG :GT_REF %<RSUBR-ENTRY '[:CG_MODULE :GT_REF #DECL ("VALUE" ANY ANY <VECTOR 
ANY ANY> "OPTIONAL" ANY)] 10540>> 

<SETG :GT_REF$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_GET_TAG .PROCLIST>> 

<SETG :GT_GET_TAG %<RSUBR-ENTRY '[:CG_MODULE :GT_GET_TAG #DECL ("VALUE" ANY ANY 
STRING "OPTIONAL" ANY)] 10619>> 

<SETG :GT_GET_TAG$TYPE :NAME> 

<SET PROCLIST <CONS :GT_IDN .PROCLIST>> 

<SETG :GT_IDN %<RSUBR-ENTRY '[:CG_MODULE :GT_IDN #DECL ("VALUE" ANY ANY ANY 
"OPTIONAL" ANY)] 10713>> 

<SETG :GT_IDN$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_IDNCALL .PROCLIST>> 

<SETG :GT_IDNCALL %<RSUBR-ENTRY '[:CG_MODULE :GT_IDNCALL #DECL ("VALUE" ANY ANY 
ANY "OPTIONAL" ANY)] 10819>> 

<SETG :GT_IDNCALL$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_DOLLAR .PROCLIST>> 

<SETG :GT_DOLLAR %<RSUBR-ENTRY '[:CG_MODULE :GT_DOLLAR #DECL ("VALUE" ANY ANY 
ANY "OPTIONAL" ANY)] 10929>> 

<SETG :GT_DOLLAR$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_OPCALL .PROCLIST>> 

<SETG :GT_OPCALL %<RSUBR-ENTRY '[:CG_MODULE :GT_OPCALL #DECL ("VALUE" ANY ANY <
VECTOR ANY ANY> "OPTIONAL" ANY)] 11031>> 

<SETG :GT_OPCALL$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_STRINGCALL .PROCLIST>> 

<SETG :GT_STRINGCALL %<RSUBR-ENTRY '[:CG_MODULE :GT_STRINGCALL #DECL ("VALUE" 
ANY ANY ANY STRING "OPTIONAL" ANY)] 11071>> 

<SETG :GT_STRINGCALL$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_EMPTY .PROCLIST>> 

<SETG :GT_EMPTY %<RSUBR-ENTRY '[:CG_MODULE :GT_EMPTY #DECL ("VALUE" ANY 
"OPTIONAL" ANY)] 11561>> 

<SETG :GT_EMPTY$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_CONST .PROCLIST>> 

<SETG :GT_CONST %<RSUBR-ENTRY '[:CG_MODULE :GT_CONST #DECL ("VALUE" ANY ANY ANY 
"OPTIONAL" ANY)] 11591>> 

<SETG :GT_CONST$TYPE :TYPESPEC> 

"***** CLU COMPILER ***** FRIDAY, 5 SEP 1975 19:20 EDT *****" 

<SET REASONABLE T> 

<SET GLUE T> 

<OR <BOUND? PROCLIST> <SET PROCLIST ()>> 

<SET PROCLIST <CONS :ZEN$CREATE .PROCLIST>> 

<SETG :ZEN$CREATE %<RSUBR-ENTRY '[:CG_MODULE :ZEN$CREATE #DECL ("VALUE" ANY 
"OPTIONAL" ANY)] 11673>> 

<SETG :ZEN$CREATE$TYPE :ZEN> 

<PUTPROP :ZEN CREATE ,:ZEN$CREATE> 

<SET PROCLIST <CONS :ZEN$NEW_MODULE .PROCLIST>> 

<SETG :ZEN$NEW_MODULE %<RSUBR-ENTRY '[:CG_MODULE :ZEN$NEW_MODULE #DECL ("VALUE" 
ATOM <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX
FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR 
FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> ANY STRING "OPTIONAL" ANY)] 11784
>> 

<PUTPROP :ZEN NEW_MODULE ,:ZEN$NEW_MODULE> 

<SET PROCLIST <CONS :ZEN$ESCOPE .PROCLIST>> 

<SETG :ZEN$ESCOPE %<RSUBR-ENTRY '[:CG_MODULE :ZEN$ESCOPE #DECL ("VALUE" FIX <
VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX FIX <
VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX
FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 11872>> 

<SETG :ZEN$ESCOPE$TYPE :INT> 

<PUTPROP :ZEN ESCOPE ,:ZEN$ESCOPE> 

<SET PROCLIST <CONS :ZEN$NEXT_HANDLER .PROCLIST>> 

<SETG :ZEN$NEXT_HANDLER %<RSUBR-ENTRY '[:CG_MODULE :ZEN$NEXT_HANDLER #DECL (
"VALUE" FIX <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM 
FALSE> FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 11906>> 

<SETG :ZEN$NEXT_HANDLER$TYPE :INT> 

<PUTPROP :ZEN NEXT_HANDLER ,:ZEN$NEXT_HANDLER> 

<SET PROCLIST <CONS :ZEN$NEXT_ESCOPE .PROCLIST>> 

<SETG :ZEN$NEXT_ESCOPE %<RSUBR-ENTRY '[:CG_MODULE :ZEN$NEXT_ESCOPE #DECL (
"VALUE" FIX <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM 
FALSE> FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 11943>> 

<SETG :ZEN$NEXT_ESCOPE$TYPE :INT> 

<PUTPROP :ZEN NEXT_ESCOPE ,:ZEN$NEXT_ESCOPE> 

<SET PROCLIST <CONS :ZEN$PUSH_ESCOPE .PROCLIST>> 

<SETG :ZEN$PUSH_ESCOPE %<RSUBR-ENTRY '[:CG_MODULE :ZEN$PUSH_ESCOPE #DECL (
"VALUE" ATOM <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM 
FALSE> FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> FIX "OPTIONAL" ANY)] 
11980>> 

<PUTPROP :ZEN PUSH_ESCOPE ,:ZEN$PUSH_ESCOPE> 

<SET PROCLIST <CONS :ZEN$POP_ESCOPE .PROCLIST>> 

<SETG :ZEN$POP_ESCOPE %<RSUBR-ENTRY '[:CG_MODULE :ZEN$POP_ESCOPE #DECL ("VALUE" 
ATOM <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX
FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR 
FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 12017>> 

<PUTPROP :ZEN POP_ESCOPE ,:ZEN$POP_ESCOPE> 

<SET PROCLIST <CONS :ZEN$NEED_FOM .PROCLIST>> 

<SETG :ZEN$NEED_FOM %<RSUBR-ENTRY '[:CG_MODULE :ZEN$NEED_FOM #DECL ("VALUE" <OR 
ATOM FALSE> <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM 
FALSE> FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 12052>> 

<SETG :ZEN$NEED_FOM$TYPE :BOOL> 

<PUTPROP :ZEN NEED_FOM ,:ZEN$NEED_FOM> 

<SET PROCLIST <CONS :ZEN$SET_PARMS .PROCLIST>> 

<SETG :ZEN$SET_PARMS %<RSUBR-ENTRY '[:CG_MODULE :ZEN$SET_PARMS #DECL ("VALUE" 
ATOM <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX
FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR 
FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> <VECTOR UVECTOR FIX FIX FIX> 
"OPTIONAL" ANY)] 12084>> 

<PUTPROP :ZEN SET_PARMS ,:ZEN$SET_PARMS> 

<SET PROCLIST <CONS :ZEN$GET_PARMS .PROCLIST>> 

<SETG :ZEN$GET_PARMS %<RSUBR-ENTRY '[:CG_MODULE :ZEN$GET_PARMS #DECL ("VALUE" <
VECTOR UVECTOR FIX FIX FIX> <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY 
STRING <OR ATOM FALSE> FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX 
FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> 
"OPTIONAL" ANY)] 12118>> 

<SETG :ZEN$GET_PARMS$TYPE (:ARRAY :IDN)> 

<PUTPROP :ZEN GET_PARMS ,:ZEN$GET_PARMS> 

<SET PROCLIST <CONS :ZEN$PUT_STMT .PROCLIST>> 

<SETG :ZEN$PUT_STMT %<RSUBR-ENTRY '[:CG_MODULE :ZEN$PUT_STMT #DECL ("VALUE" ATOM
<VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX FIX 
<VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX 
FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> ANY "OPTIONAL" ANY)] 12150>> 

<PUTPROP :ZEN PUT_STMT ,:ZEN$PUT_STMT> 

<SET PROCLIST <CONS :ZEN$GET_STMT .PROCLIST>> 

<SETG :ZEN$GET_STMT %<RSUBR-ENTRY '[:CG_MODULE :ZEN$GET_STMT #DECL ("VALUE" ANY 
<VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX FIX 
<VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX 
FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 12186>> 

<SETG :ZEN$GET_STMT$TYPE :STMT> 

<PUTPROP :ZEN GET_STMT ,:ZEN$GET_STMT> 

<SET PROCLIST <CONS :ZEN$GET_LINENO .PROCLIST>> 

<SETG :ZEN$GET_LINENO %<RSUBR-ENTRY '[:CG_MODULE :ZEN$GET_LINENO #DECL ("VALUE" 
FIX <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX 
FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR 
FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 12218>> 

<SETG :ZEN$GET_LINENO$TYPE :INT> 

<PUTPROP :ZEN GET_LINENO ,:ZEN$GET_LINENO> 

<SET PROCLIST <CONS :ZEN$ABSTRACT_TYPE .PROCLIST>> 

<SETG :ZEN$ABSTRACT_TYPE %<RSUBR-ENTRY '[:CG_MODULE :ZEN$ABSTRACT_TYPE #DECL (
"VALUE" ANY <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM 
FALSE> FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 12252>> 

<SETG :ZEN$ABSTRACT_TYPE$TYPE :TYPESPEC> 

<PUTPROP :ZEN ABSTRACT_TYPE ,:ZEN$ABSTRACT_TYPE> 

<SET PROCLIST <CONS :ZEN$CONCRETE_TYPE .PROCLIST>> 

<SETG :ZEN$CONCRETE_TYPE %<RSUBR-ENTRY '[:CG_MODULE :ZEN$CONCRETE_TYPE #DECL (
"VALUE" ANY <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM 
FALSE> FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 12284>> 

<SETG :ZEN$CONCRETE_TYPE$TYPE :TYPESPEC> 

<PUTPROP :ZEN CONCRETE_TYPE ,:ZEN$CONCRETE_TYPE> 

<SET PROCLIST <CONS :ZEN$MODULE_NAME .PROCLIST>> 

<SETG :ZEN$MODULE_NAME %<RSUBR-ENTRY '[:CG_MODULE :ZEN$MODULE_NAME #DECL (
"VALUE" STRING <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM 
FALSE> FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 12316>> 

<SETG :ZEN$MODULE_NAME$TYPE :STRING> 

<PUTPROP :ZEN MODULE_NAME ,:ZEN$MODULE_NAME> 

<SET PROCLIST <CONS :ZEN$FINISH .PROCLIST>> 

<SETG :ZEN$FINISH %<RSUBR-ENTRY '[:CG_MODULE :ZEN$FINISH #DECL ("VALUE" ATOM <
VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX FIX <
VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX
FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 12348>> 

<PUTPROP :ZEN FINISH ,:ZEN$FINISH> 

<SET PROCLIST <CONS :ZEN$RECTYPEID .PROCLIST>> 

<SETG :ZEN$RECTYPEID %<RSUBR-ENTRY '[:CG_MODULE :ZEN$RECTYPEID #DECL ("VALUE" <
VECTOR [3 FIX]> <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM
FALSE> FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> <VECTOR UVECTOR FIX FIX 
FIX> <OR ATOM FALSE> "OPTIONAL" ANY)] 12395>> 

<SETG :ZEN$RECTYPEID$TYPE R$2620$3$0> 

<PUTPROP :ZEN RECTYPEID ,:ZEN$RECTYPEID> 

<SET PROCLIST <CONS :ZEN$GENALL .PROCLIST>> 

<SETG :ZEN$GENALL %<RSUBR-ENTRY '[:CG_MODULE :ZEN$GENALL #DECL ("VALUE" ATOM <
VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX FIX <
VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX
FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> <VECTOR UVECTOR FIX FIX FIX> STRING 
"OPTIONAL" ANY)] 12598>> 

<PUTPROP :ZEN GENALL ,:ZEN$GENALL> 

<SET PROCLIST <CONS :ZEN$PARMSP .PROCLIST>> 

<SETG :ZEN$PARMSP %<RSUBR-ENTRY '[:CG_MODULE :ZEN$PARMSP #DECL ("VALUE" <OR ATOM
FALSE> <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> 
FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR 
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> <VECTOR UVECTOR FIX FIX 
FIX> "OPTIONAL" ANY)] 12817>> 

<SETG :ZEN$PARMSP$TYPE :BOOL> 

<PUTPROP :ZEN PARMSP ,:ZEN$PARMSP> 

<SET PROCLIST <CONS :ZEN$PUSHTAG .PROCLIST>> 

<SETG :ZEN$PUSHTAG %<RSUBR-ENTRY '[:CG_MODULE :ZEN$PUSHTAG #DECL ("VALUE" ATOM <
VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX FIX <
VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX
FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> ANY ANY "OPTIONAL" ANY)] 12856>> 

<PUTPROP :ZEN PUSHTAG ,:ZEN$PUSHTAG> 

<SET PROCLIST <CONS :ZEN$POPTAG .PROCLIST>> 

<SETG :ZEN$POPTAG %<RSUBR-ENTRY '[:CG_MODULE :ZEN$POPTAG #DECL ("VALUE" ATOM <
VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX FIX <
VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX
FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> ANY "OPTIONAL" ANY)] 12907>> 

<PUTPROP :ZEN POPTAG ,:ZEN$POPTAG> 

<SET PROCLIST <CONS :ZEN$CURTYPE .PROCLIST>> 

<SETG :ZEN$CURTYPE %<RSUBR-ENTRY '[:CG_MODULE :ZEN$CURTYPE #DECL ("VALUE" ANY <
VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX FIX <
VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX
FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> ANY "OPTIONAL" ANY)] 13013>> 

<SETG :ZEN$CURTYPE$TYPE :TYPESPEC> 

<PUTPROP :ZEN CURTYPE ,:ZEN$CURTYPE> 

<SETG :ZEN (:ZEN)> 

<SETG R$2620$2$0 '(:RECORD :NAME :TYPESPEC)> 

<SETG R$2620$3$0 '(:RECORD :INT :INT :INT)> 

"Pass 2 for ZEN done in 124.58257 seconds.
" 

<SETG :STAMPER %<RSUBR-ENTRY '[:CG_MODULE :STAMPER #DECL ("VALUE" FIX STRING)] 
13130>> 
