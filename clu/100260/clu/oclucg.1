'<PCODE "CLUCG">

"***** CLU COMPILER ***** FRIDAY, 5 SEP 1975 19:12 EDT *****" 

<SET REASONABLE T> 

<SET GLUE T> 

<OR <BOUND? PROCLIST> <SET PROCLIST ()>> 

<SET PROCLIST <CONS :CG_MODULE .PROCLIST>> 

<SETG :CG_MODULE  %<RSUBR!- '[ %<PCODE!- "CLUCG" 0> :CG_MODULE #DECL ("VALUE" 
ATOM ANY <LIST FIX ANY> "OPTIONAL" ANY) :IDN$UNMARK :IDN$EQUAL :IDN$MARK :I2S 
ARRAY$SIMILAR :STMT$LINENO ARRAY$RETRACTH :ENV$GET_CONCRETE_TYPE 
:ENV$GET_ABSTRACT_TYPE :ENV$GET_CATCHES_FOM :ENV$GET_SIGS_FOM :STAMPER 
:STMT$EMPTY :TYPESPEC$MAKE_UNKNOWN :TYPESPEC$MAKE_PARM :TYPESPEC$PRINT 
:RETURN-ERROR :TYPESPEC$MAKE_ATYPE :IDN$FAKE :TYPESPEC$MAKE_BAD 
:TYPESPEC$GET_ARRAY :TYPESPEC$MAKE_PROC :TYPESPEC$NICEFY :TYPESPEC$U 
:TYPESPEC$GET_ATYPE :TYPESPEC$IS_ATYPE :GT_REF :TYPESPEC$MAKE_TYPE 
:TYPESPEC$MAKE_STRING :TYPESPEC$MAKE_CHAR :TYPESPEC$MAKE_NULL :TYPESPEC$MAKE_INT
 :TYPESPEC$MAKE_ARRAY :TYPESPEC$MAKE_BOOL :EXPR$GET_TYPE ARRAY$PREDICT 
:CONST$GET_TYPE :CONST$IS_TYPE :BPUTQ :BPUTS :BPUTSUC :BPUTC :BPUTI :CONST$D 
:STRINGID$VALUE :DU$EQUAL :GET_ARRAY_DU STRING$CN :NAME$EQUAL :NAME$U 
STRING$REST STRING$SUBSTR BOOL$AND :IDN$SET_CHANGE ARRAY$STORE ARRAY$EXTENDH 
:IDN$IS_CHANGED :IDN$CLEAR_CHANGE :IDN$IS_MARKED :IDN$FAKE_VAR NEWARR ARRAY$TOP 
:DU$GET_UNIQUE :EXPR$D :TYPESPEC$IS_ARRAY :STMT$U :EXPR$U :DECL$D :NAME$D :OOPS 
:STMT$D ARRAY$BOTTOM :IN_SYSTEM BOOL$OR ARRAY$SIZE :TYPESPEC$DN :IDN$GET_TYPE 
:IDN$GETSTRING ARRAY$FETCH ARRAY$HIGH ARRAY$LOW "" DONE "PUTPROP" "," "$" 
"PROCLIST" "CONS" ".PROCLIST>>" T " \"OPTIONAL\" (HANDLERS ())" " HANDLERS" 
"\"AUX\" (OLD-FOM-HANDLER .FAILURE-HANDLER)" "\"NAME\" RTN" "#DECL (" "VALUE" 
"LIST" ":RETURN-ERROR" "DONE" "$type" "Bad statement to cg_stmt" "E" 
"failure_of_mechanism" "FAILURE-HANDLER" 
"#DECL ((FAILURE-HANDLER) <SPECIAL ANY>)" "<SET E" "TAG" "L" " !" 
"<SET FAILURE-HANDLER <TAG L" ">>" "<RETURN>" "ANY" "VECTOR UVECTOR FIX FIX FIX"
 "ATOM" "OR ATOM FALSE" "FIX" "CHARACTER" "OR ATOM LIST" "STRING" "LIST FIX ANY"
 "LIST <OR ATOM LIST> ANY" "VECTOR" "Bad type to cg_decltype" 
"<NTH .ERROR-ARGS " ":" "'" "NTH" "PUT" "APPLY" 
"PROG (L) #DECL ((L) LIST) <SET L" "<1 .L>> <SET L <REST .L>>" "store" "<NTH " 
"<PUT " "Invalid left-hand-side of assignment" ") (T <RETURN>)>>" "RETURN>)>>" 
"J" "K" "I" "#DECL ((" "FIX)" ".I>" "COND (<COND (<L? .J 0> <L?" "K>) (T <L? .K"
 ">)> <RETURN>)>" "<L? .K" "> <RETURN>)>" ") (T <RETURN>)>" "+" "1" "RETURN" 
"done" "RTN" "PROG ($$) #DECL (($$)" ") <SET $$" "OR" 
"PROG (OLDGUY) #DECL ((OLDGUY) <LIST FIX ANY>)" "SET OLDGUY" "PROG (TG" 
") #DECL ((TG) FIX) <SET TG <NTH .OLDGUY 1>>" "<NTH .OLDGUY 2>>" "==? .TG" 
"OR <==? <NTH .OLDGUY 2>" "> <SET OLDGUY (.TG" ")>>> <SET" ".OLDGUY>>" "SIGNAL" 
".HANDLERS" " .OLD-FOM-HANDLER" "Typecase statement not implemented" 
"Substitute statement not implemented" "Exit statement not implemented" "add" 
"sub" "mul" "div" "pow" "and" "or" "concat" "mod" "equal" "NOT" "lt" "gt" ") (T"
 ")>" "#CHARACTER" "NIL" "fetch" "Illegal expression to cg_expr" "not" "minus" 
![!] "<NEWARR" "<ARRAY$FILL" ".$" ",:" "NOT <OR" "APPLYOP" "make_" 
"Bad ONEOF tag: " "equiv" "similar" "copy" "copy1" "encode" "decode" 
"Bad ONEOF operation: " "==?" "RECORD$COPY1" "new" "['![!] 0 0 0]" "ARRAY$" 
"bottom" "top" "retractl" "retracth" "-" "*" "L?" "G?" "INT" "size" "LENGTH" 
"STRCOMP" "> 0>" "index" "s2ac" "ac2s" "c2i" "ASCII" "c2s" "CHAR" "BOOL" ":BOOL"
 ":CHAR" ":INT" ":NULL" ":PROC" ":STRING" ":TYPE" "Illegal type to cg_typespec" 
"<NTH" "Attempt to select component of improper type: cg_sel" "NULL" "TYPE" 
"PROC" "Illegal type given to cg_simpop" ":RECORD" ":ONEOF" "R$" "O$" " " 
"GETOP" "()" ".E" "<FUNCTION (X \"OPTIONAL\" E) (" " .X)>" 
"<FUNCTION (R \"OPTIONAL\" E) <NTH .R " 
"<FUNCTION (R V \"OPTIONAL\" E) <PUT .R " " .V> .V>" "Bad constant to CG_CONST" 
"Caste expression not implemented" "Force expression not implemented" 
"<REPEAT () " "<DEFINE " "<COND " "<COND (" "T " "#FALSE () " "<PROG " "<SET " 
"<SETG " " $" "Identifier not a valid selector: " "get_" "put_" 
" is a bad operation name for this recordtype." 
"Illegal expression given to gt_expr" 
"Illegal procedure object given to gt_invoke" 
"Type not a procedure type: gt_call" "Tag " " undefined" not_array 
"Attempt to perform array fetch on non-array" 
"Type of externally declared identifier unknown: " " gt_idn" 
"Encode operation returns nothing" "rest" "substr" "cn" "i2c" "odd" "create" 
"fill" "predict" "high" "low" "Unrecognized operation '" "' on type " 
"Bad const to GT_CONST" "clu" "r" "o" R$2620$2$0 
"Internal error in ZEN$CURTYPE: no type for "]>> 
<AND <ASSIGNED? GLUE> .GLUE <PUT ,:CG_MODULE PGLUE ![715827882 -22906492246 
-22906492246 -22906492246 -22906490881 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 
-16777216 0 0!]>> 

<SET PROCLIST <CONS :CG_CLUSTER .PROCLIST>> 

<SETG :CG_CLUSTER %<RSUBR-ENTRY '[:CG_MODULE :CG_CLUSTER #DECL ("VALUE" ATOM ANY
<VECTOR ANY <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR 
UVECTOR FIX FIX FIX>> "OPTIONAL" ANY)] 74>> 

<SET PROCLIST <CONS :CG_PROC .PROCLIST>> 

<SETG :CG_PROC %<RSUBR-ENTRY '[:CG_MODULE :CG_PROC #DECL ("VALUE" ATOM ANY <
VECTOR <VECTOR UVECTOR FIX FIX FIX> ANY <VECTOR UVECTOR FIX FIX FIX> <VECTOR 
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX>> STRING STRING "OPTIONAL" ANY)
] 257>> 

<SET PROCLIST <CONS :CG_RTNS .PROCLIST>> 

<SETG :CG_RTNS %<RSUBR-ENTRY '[:CG_MODULE :CG_RTNS #DECL ("VALUE" ATOM ANY 
STRING <VECTOR UVECTOR FIX FIX FIX> STRING "OPTIONAL" ANY)] 668>> 

<SET PROCLIST <CONS :CG_RETURNTYPES .PROCLIST>> 

<SETG :CG_RETURNTYPES %<RSUBR-ENTRY '[:CG_MODULE :CG_RETURNTYPES #DECL ("VALUE" 
ATOM ANY <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 797>> 

<SET PROCLIST <CONS :CG_STMT .PROCLIST>> 

<SETG :CG_STMT %<RSUBR-ENTRY '[:CG_MODULE :CG_STMT #DECL ("VALUE" ATOM ANY ANY <
OR ATOM FALSE> <OR ATOM FALSE> "OPTIONAL" ANY)] 891>> 

<SET PROCLIST <CONS :CG_EXCEPTSTMT .PROCLIST>> 

<SETG :CG_EXCEPTSTMT %<RSUBR-ENTRY '[:CG_MODULE :CG_EXCEPTSTMT #DECL ("VALUE" 
ATOM ANY <VECTOR <VECTOR UVECTOR FIX FIX FIX> ANY> "OPTIONAL" ANY)] 1117>> 

<SET PROCLIST <CONS :CG_BODY .PROCLIST>> 

<SETG :CG_BODY %<RSUBR-ENTRY '[:CG_MODULE :CG_BODY #DECL ("VALUE" ATOM ANY <
VECTOR UVECTOR FIX FIX FIX> <OR ATOM FALSE> "OPTIONAL" ANY)] 1457>> 

<SET PROCLIST <CONS :CG_DECL .PROCLIST>> 

<SETG :CG_DECL %<RSUBR-ENTRY '[:CG_MODULE :CG_DECL #DECL ("VALUE" ATOM ANY ANY 
"OPTIONAL" ANY)] 1736>> 

<SET PROCLIST <CONS :CG_NORMDECL .PROCLIST>> 

<SETG :CG_NORMDECL %<RSUBR-ENTRY '[:CG_MODULE :CG_NORMDECL #DECL ("VALUE" ATOM 
ANY <VECTOR <LIST FIX ANY> <VECTOR UVECTOR FIX FIX FIX> ANY> "OPTIONAL" ANY)] 
1815>> 

<SET PROCLIST <CONS :CG_EXCEPTDECL .PROCLIST>> 

<SETG :CG_EXCEPTDECL %<RSUBR-ENTRY '[:CG_MODULE :CG_EXCEPTDECL #DECL ("VALUE" 
ATOM ANY <VECTOR ANY <VECTOR UVECTOR FIX FIX FIX>> "OPTIONAL" ANY)] 1964>> 

<SET PROCLIST <CONS :CG_DECL_NAMES .PROCLIST>> 

<SETG :CG_DECL_NAMES %<RSUBR-ENTRY '[:CG_MODULE :CG_DECL_NAMES #DECL ("VALUE" 
ATOM ANY ANY "OPTIONAL" ANY)] 2300>> 

<SET PROCLIST <CONS :CG_DECL_MUD .PROCLIST>> 

<SETG :CG_DECL_MUD %<RSUBR-ENTRY '[:CG_MODULE :CG_DECL_MUD #DECL ("VALUE" ATOM 
ANY ANY "OPTIONAL" ANY)] 2387>> 

<SET PROCLIST <CONS :CG_DECLMUD .PROCLIST>> 

<SETG :CG_DECLMUD %<RSUBR-ENTRY '[:CG_MODULE :CG_DECLMUD #DECL ("VALUE" ATOM ANY
<VECTOR UVECTOR FIX FIX FIX> ANY "OPTIONAL" ANY)] 2480>> 

<SET PROCLIST <CONS :CG_DECLTYPE .PROCLIST>> 

<SETG :CG_DECLTYPE %<RSUBR-ENTRY '[:CG_MODULE :CG_DECLTYPE #DECL ("VALUE" ATOM 
ANY ANY <OR ATOM FALSE> "OPTIONAL" ANY)] 2560>> 

<SET PROCLIST <CONS :CG_ELF .PROCLIST>> 

<SETG :CG_ELF %<RSUBR-ENTRY '[:CG_MODULE :CG_ELF #DECL ("VALUE" ATOM ANY ANY 
"OPTIONAL" ANY)] 2755>> 

<SET PROCLIST <CONS :CG_NAMES .PROCLIST>> 

<SETG :CG_NAMES %<RSUBR-ENTRY '[:CG_MODULE :CG_NAMES #DECL ("VALUE" ATOM ANY <
VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 2798>> 

<SET PROCLIST <CONS :CG_LIST_OF_TYPES .PROCLIST>> 

<SETG :CG_LIST_OF_TYPES %<RSUBR-ENTRY '[:CG_MODULE :CG_LIST_OF_TYPES #DECL (
"VALUE" ATOM ANY <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 2874>> 

<SET PROCLIST <CONS :CG_HANDLER .PROCLIST>> 

<SETG :CG_HANDLER %<RSUBR-ENTRY '[:CG_MODULE :CG_HANDLER #DECL ("VALUE" ATOM ANY
<VECTOR <VECTOR UVECTOR FIX FIX FIX> ANY ANY> "OPTIONAL" ANY)] 2912>> 

"Pass 2 for CG1 done in 169.75593 seconds.
" 

"***** CLU COMPILER ***** THURSDAY, 28 AUG 1975 07:22 EDT *****" 

<SET REASONABLE T> 

<SET GLUE T> 

<OR <BOUND? PROCLIST> <SET PROCLIST ()>> 

<SET PROCLIST <CONS :CG_INVOKE .PROCLIST>> 

<SETG :CG_INVOKE %<RSUBR-ENTRY '[:CG_MODULE :CG_INVOKE #DECL ("VALUE" ATOM ANY <
VECTOR <VECTOR UVECTOR FIX FIX FIX> ANY> "OPTIONAL" ANY)] 3137>> 

<SET :CG_INVOKE ,:CG_INVOKE> 

<SET PROCLIST <CONS :CG_FINISH_INVOKE .PROCLIST>> 

<SETG :CG_FINISH_INVOKE %<RSUBR-ENTRY '[:CG_MODULE :CG_FINISH_INVOKE #DECL (
"VALUE" ATOM ANY <VECTOR UVECTOR FIX FIX FIX> FIX "OPTIONAL" ANY)] 3453>> 

<SET :CG_FINISH_INVOKE ,:CG_FINISH_INVOKE> 

<SET PROCLIST <CONS :CG_MASSN .PROCLIST>> 

<SETG :CG_MASSN %<RSUBR-ENTRY '[:CG_MODULE :CG_MASSN #DECL ("VALUE" ATOM ANY <
VECTOR <VECTOR UVECTOR FIX FIX FIX> VECTOR> "OPTIONAL" ANY)] 3495>> 

<SET :CG_MASSN ,:CG_MASSN> 

<SET PROCLIST <CONS :CG_ASSN .PROCLIST>> 

<SETG :CG_ASSN %<RSUBR-ENTRY '[:CG_MODULE :CG_ASSN #DECL ("VALUE" ATOM ANY <
VECTOR ANY ANY> <OR ATOM FALSE> "OPTIONAL" ANY)] 3584>> 

<SET :CG_ASSN ,:CG_ASSN> 

<SET PROCLIST <CONS :CG_WHILEST .PROCLIST>> 

<SETG :CG_WHILEST %<RSUBR-ENTRY '[:CG_MODULE :CG_WHILEST #DECL ("VALUE" ATOM ANY
<VECTOR ANY ANY> "OPTIONAL" ANY)] 3786>> 

<SET :CG_WHILEST ,:CG_WHILEST> 

<SET PROCLIST <CONS :CG_REPEATST .PROCLIST>> 

<SETG :CG_REPEATST %<RSUBR-ENTRY '[:CG_MODULE :CG_REPEATST #DECL ("VALUE" ATOM 
ANY <VECTOR ANY ANY> "OPTIONAL" ANY)] 3838>> 

<SET :CG_REPEATST ,:CG_REPEATST> 

<SET PROCLIST <CONS :CG_FORST .PROCLIST>> 

<SETG :CG_FORST %<RSUBR-ENTRY '[:CG_MODULE :CG_FORST #DECL ("VALUE" ATOM ANY <
VECTOR ANY <LIST FIX ANY> <LIST FIX ANY> <LIST FIX ANY> ANY ANY ANY> <OR ATOM 
FALSE> "OPTIONAL" ANY)] 3890>> 

<SET :CG_FORST ,:CG_FORST> 

<SET PROCLIST <CONS :CG_SETS .PROCLIST>> 

<SETG :CG_SETS %<RSUBR-ENTRY '[:CG_MODULE :CG_SETS #DECL ("VALUE" ATOM ANY 
STRING ANY "OPTIONAL" ANY)] 4214>> 

<SET :CG_SETS ,:CG_SETS> 

<SET PROCLIST <CONS :CG_IFST .PROCLIST>> 

<SETG :CG_IFST %<RSUBR-ENTRY '[:CG_MODULE :CG_IFST #DECL ("VALUE" ATOM ANY <
VECTOR ANY ANY ANY> "OPTIONAL" ANY)] 4255>> 

<SET :CG_IFST ,:CG_IFST> 

<SET PROCLIST <CONS :CG_RTN .PROCLIST>> 

<SETG :CG_RTN %<RSUBR-ENTRY '[:CG_MODULE :CG_RTN #DECL ("VALUE" ATOM ANY <VECTOR
UVECTOR FIX FIX FIX> <OR ATOM FALSE> "OPTIONAL" ANY)] 4311>> 

<SET :CG_RTN ,:CG_RTN> 

<SET PROCLIST <CONS :CG_CASEST .PROCLIST>> 

<SETG :CG_CASEST %<RSUBR-ENTRY '[:CG_MODULE :CG_CASEST #DECL ("VALUE" ATOM ANY <
VECTOR <VECTOR UVECTOR FIX FIX FIX> ANY <LIST FIX ANY>> "OPTIONAL" ANY)] 4383>> 

<SET :CG_CASEST ,:CG_CASEST> 

<SET PROCLIST <CONS :CG_TAG .PROCLIST>> 

<SETG :CG_TAG %<RSUBR-ENTRY '[:CG_MODULE :CG_TAG #DECL ("VALUE" ATOM ANY <VECTOR
<VECTOR UVECTOR FIX FIX FIX> <LIST FIX ANY> ANY> "OPTIONAL" ANY)] 4679>> 

<SET :CG_TAG ,:CG_TAG> 

<SET PROCLIST <CONS :CG_SIGSTMT .PROCLIST>> 

<SETG :CG_SIGSTMT %<RSUBR-ENTRY '[:CG_MODULE :CG_SIGSTMT #DECL ("VALUE" ATOM ANY
<VECTOR <VECTOR UVECTOR FIX FIX FIX> ANY> "OPTIONAL" ANY)] 5001>> 

<SET :CG_SIGSTMT ,:CG_SIGSTMT> 

<SET PROCLIST <CONS :CG_TYPESTMT .PROCLIST>> 

<SETG :CG_TYPESTMT %<RSUBR-ENTRY '[:CG_MODULE :CG_TYPESTMT #DECL ("VALUE" ATOM 
ANY <VECTOR <VECTOR UVECTOR FIX FIX FIX> <LIST FIX ANY> ANY> "OPTIONAL" ANY)] 
5077>> 

<SET :CG_TYPESTMT ,:CG_TYPESTMT> 

<SET PROCLIST <CONS :CG_SUBSTMT .PROCLIST>> 

<SETG :CG_SUBSTMT %<RSUBR-ENTRY '[:CG_MODULE :CG_SUBSTMT #DECL ("VALUE" ATOM ANY
<VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 5113>> 

<SET :CG_SUBSTMT ,:CG_SUBSTMT> 

<SET PROCLIST <CONS :CG_EXITSTMT .PROCLIST>> 

<SETG :CG_EXITSTMT %<RSUBR-ENTRY '[:CG_MODULE :CG_EXITSTMT #DECL ("VALUE" ATOM 
ANY ATOM "OPTIONAL" ANY)] 5149>> 

<SET :CG_EXITSTMT ,:CG_EXITSTMT> 

"Pass 2 for CG2 done in 208.97533 seconds.
" 

"***** CLU COMPILER ***** THURSDAY, 28 AUG 1975 07:30 EDT *****" 

<SET REASONABLE T> 

<SET GLUE T> 

<OR <BOUND? PROCLIST> <SET PROCLIST ()>> 

<SET PROCLIST <CONS :CG_EXPR .PROCLIST>> 

<SETG :CG_EXPR %<RSUBR-ENTRY '[:CG_MODULE :CG_EXPR #DECL ("VALUE" ATOM ANY ANY 
"OPTIONAL" ANY)] 5185>> 

<SET :CG_EXPR ,:CG_EXPR> 

<SET PROCLIST <CONS :CG_BINEXP .PROCLIST>> 

<SETG :CG_BINEXP %<RSUBR-ENTRY '[:CG_MODULE :CG_BINEXP #DECL ("VALUE" ATOM ANY 
STRING <VECTOR ANY ANY> "OPTIONAL" ANY)] 5647>> 

<SET :CG_BINEXP ,:CG_BINEXP> 

<SET PROCLIST <CONS :CG_NOT .PROCLIST>> 

<SETG :CG_NOT %<RSUBR-ENTRY '[:CG_MODULE :CG_NOT #DECL ("VALUE" ATOM ANY ANY 
"OPTIONAL" ANY)] 5717>> 

<SET :CG_NOT ,:CG_NOT> 

<SET PROCLIST <CONS :CG_MINUS .PROCLIST>> 

<SETG :CG_MINUS %<RSUBR-ENTRY '[:CG_MODULE :CG_MINUS #DECL ("VALUE" ATOM ANY ANY
"OPTIONAL" ANY)] 5760>> 

<SET :CG_MINUS ,:CG_MINUS> 

<SET PROCLIST <CONS :CG_EXPRLIST .PROCLIST>> 

<SETG :CG_EXPRLIST %<RSUBR-ENTRY '[:CG_MODULE :CG_EXPRLIST #DECL ("VALUE" ATOM 
ANY <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 5803>> 

<SET :CG_EXPRLIST ,:CG_EXPRLIST> 

<SET PROCLIST <CONS :CG_NOTBIN .PROCLIST>> 

<SETG :CG_NOTBIN %<RSUBR-ENTRY '[:CG_MODULE :CG_NOTBIN #DECL ("VALUE" ATOM ANY 
STRING <VECTOR ANY ANY> "OPTIONAL" ANY)] 5873>> 

<SET :CG_NOTBIN ,:CG_NOTBIN> 

<SET PROCLIST <CONS :CG_RECCON .PROCLIST>> 

<SETG :CG_RECCON %<RSUBR-ENTRY '[:CG_MODULE :CG_RECCON #DECL ("VALUE" ATOM ANY <
VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 5915>> 

<SET :CG_RECCON ,:CG_RECCON> 

<SET PROCLIST <CONS :CG_ARRCON .PROCLIST>> 

<SETG :CG_ARRCON %<RSUBR-ENTRY '[:CG_MODULE :CG_ARRCON #DECL ("VALUE" ATOM ANY <
VECTOR ANY <VECTOR UVECTOR FIX FIX FIX>> "OPTIONAL" ANY)] 6217>> 

<SET :CG_ARRCON ,:CG_ARRCON> 

<SET PROCLIST <CONS :CG_FILL .PROCLIST>> 

<SETG :CG_FILL %<RSUBR-ENTRY '[:CG_MODULE :CG_FILL #DECL ("VALUE" ATOM ANY <
VECTOR VECTOR ANY> "OPTIONAL" ANY)] 6263>> 

<SET :CG_FILL ,:CG_FILL> 

<SET PROCLIST <CONS :CG_LHSIDN .PROCLIST>> 

<SETG :CG_LHSIDN %<RSUBR-ENTRY '[:CG_MODULE :CG_LHSIDN #DECL ("VALUE" ATOM ANY 
ANY "OPTIONAL" ANY)] 6313>> 

<SET :CG_LHSIDN ,:CG_LHSIDN> 

<SET PROCLIST <CONS :CG_IDLIT .PROCLIST>> 

<SETG :CG_IDLIT %<RSUBR-ENTRY '[:CG_MODULE :CG_IDLIT #DECL ("VALUE" ATOM ANY ANY
"OPTIONAL" ANY)] 6353>> 

<SET :CG_IDLIT ,:CG_IDLIT> 

<SET PROCLIST <CONS :CG_IDN .PROCLIST>> 

<SETG :CG_IDN %<RSUBR-ENTRY '[:CG_MODULE :CG_IDN #DECL ("VALUE" ATOM ANY ANY 
"OPTIONAL" ANY)] 6437>> 

<SET :CG_IDN ,:CG_IDN> 

<SET PROCLIST <CONS :CG_DU .PROCLIST>> 

<SETG :CG_DU %<RSUBR-ENTRY '[:CG_MODULE :CG_DU #DECL ("VALUE" ATOM ANY ANY 
"OPTIONAL" ANY)] 6521>> 

<SET :CG_DU ,:CG_DU> 

<SET PROCLIST <CONS :CG_RANGE .PROCLIST>> 

<SETG :CG_RANGE %<RSUBR-ENTRY '[:CG_MODULE :CG_RANGE #DECL ("VALUE" ATOM ANY ANY
<VECTOR ANY ANY> "OPTIONAL" ANY)] 6564>> 

<SET :CG_RANGE ,:CG_RANGE> 

<SET PROCLIST <CONS :CG_TRANGE .PROCLIST>> 

<SETG :CG_TRANGE %<RSUBR-ENTRY '[:CG_MODULE :CG_TRANGE #DECL ("VALUE" ATOM ANY 
ANY ANY <VECTOR ANY ANY> "OPTIONAL" ANY)] 6609>> 

<SET :CG_TRANGE ,:CG_TRANGE> 

<SET PROCLIST <CONS :CG_CALLOP .PROCLIST>> 

<SETG :CG_CALLOP %<RSUBR-ENTRY '[:CG_MODULE :CG_CALLOP #DECL ("VALUE" ATOM ANY <
VECTOR ANY ANY> <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 6678>> 

<SET :CG_CALLOP ,:CG_CALLOP> 

<SET PROCLIST <CONS :CG_CALLIT .PROCLIST>> 

<SETG :CG_CALLIT %<RSUBR-ENTRY '[:CG_MODULE :CG_CALLIT #DECL ("VALUE" ATOM ANY 
STRING <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 6722>> 

<SET :CG_CALLIT ,:CG_CALLIT> 

<SET PROCLIST <CONS :CG_GENCALL .PROCLIST>> 

<SETG :CG_GENCALL %<RSUBR-ENTRY '[:CG_MODULE :CG_GENCALL #DECL ("VALUE" ATOM ANY
ANY STRING <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 6770>> 

<SET :CG_GENCALL ,:CG_GENCALL> 

<SET PROCLIST <CONS :CG_CALLSTRING .PROCLIST>> 

<SETG :CG_CALLSTRING %<RSUBR-ENTRY '[:CG_MODULE :CG_CALLSTRING #DECL ("VALUE" 
ATOM ANY ANY STRING <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 6824>> 

<SET :CG_CALLSTRING ,:CG_CALLSTRING> 

"Pass 2 for CG3 done in 265.46370 seconds.
" 

"***** CLU COMPILER ***** MONDAY, 25 AUG 1975 14:06 EDT *****" 

<SET REASONABLE T> 

<SET GLUE T> 

<OR <BOUND? PROCLIST> <SET PROCLIST ()>> 

<SET PROCLIST <CONS :CG_TYPELIST .PROCLIST>> 

<SETG :CG_TYPELIST %<RSUBR-ENTRY '[:CG_MODULE :CG_TYPELIST #DECL ("VALUE" ATOM 
ANY <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 8035>> 

<SET :CG_TYPELIST ,:CG_TYPELIST> 

<SET PROCLIST <CONS :CG_TYPESPEC .PROCLIST>> 

<SETG :CG_TYPESPEC %<RSUBR-ENTRY '[:CG_MODULE :CG_TYPESPEC #DECL ("VALUE" ATOM 
ANY ANY "OPTIONAL" ANY)] 8105>> 

<SET :CG_TYPESPEC ,:CG_TYPESPEC> 

<SET PROCLIST <CONS :CG_CLUSTERPARM .PROCLIST>> 

<SETG :CG_CLUSTERPARM %<RSUBR-ENTRY '[:CG_MODULE :CG_CLUSTERPARM #DECL ("VALUE" 
ATOM ANY FIX "OPTIONAL" ANY)] 8377>> 

<SET :CG_CLUSTERPARM ,:CG_CLUSTERPARM> 

<SET PROCLIST <CONS :CG_KOP .PROCLIST>> 

<SETG :CG_KOP %<RSUBR-ENTRY '[:CG_MODULE :CG_KOP #DECL ("VALUE" ATOM ANY STRING 
<VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 8424>> 

<SET :CG_KOP ,:CG_KOP> 

<SET PROCLIST <CONS :CG_RECREF .PROCLIST>> 

<SETG :CG_RECREF %<RSUBR-ENTRY '[:CG_MODULE :CG_RECREF #DECL ("VALUE" ATOM ANY <
VECTOR ANY ANY> "OPTIONAL" ANY)] 8464>> 

<SET :CG_RECREF ,:CG_RECREF> 

<SET PROCLIST <CONS :CG_SEL .PROCLIST>> 

<SETG :CG_SEL %<RSUBR-ENTRY '[:CG_MODULE :CG_SEL #DECL ("VALUE" ATOM ANY ANY ANY
"OPTIONAL" ANY)] 8518>> 

<SET :CG_SEL ,:CG_SEL> 

<SET PROCLIST <CONS :CG_TCOPY .PROCLIST>> 

<SETG :CG_TCOPY %<RSUBR-ENTRY '[:CG_MODULE :CG_TCOPY #DECL ("VALUE" ATOM ANY ANY
ANY "OPTIONAL" ANY)] 8618>> 

<SET :CG_TCOPY ,:CG_TCOPY> 

<SET PROCLIST <CONS :CG_TEQUAL .PROCLIST>> 

<SETG :CG_TEQUAL %<RSUBR-ENTRY '[:CG_MODULE :CG_TEQUAL #DECL ("VALUE" ATOM ANY 
ANY ANY ANY "OPTIONAL" ANY)] 8663>> 

<SET :CG_TEQUAL ,:CG_TEQUAL> 

<SET PROCLIST <CONS :CG_SIMPOP .PROCLIST>> 

<SETG :CG_SIMPOP %<RSUBR-ENTRY '[:CG_MODULE :CG_SIMPOP #DECL ("VALUE" ATOM ANY 
ANY STRING "OPTIONAL" ANY)] 8710>> 

<SET :CG_SIMPOP ,:CG_SIMPOP> 

<SET PROCLIST <CONS :CG_BINSTRING .PROCLIST>> 

<SETG :CG_BINSTRING %<RSUBR-ENTRY '[:CG_MODULE :CG_BINSTRING #DECL ("VALUE" ATOM
ANY ANY STRING ANY ANY "OPTIONAL" ANY)] 8823>> 

<SET :CG_BINSTRING ,:CG_BINSTRING> 

<SET PROCLIST <CONS :CG_SBEXP .PROCLIST>> 

<SETG :CG_SBEXP %<RSUBR-ENTRY '[:CG_MODULE :CG_SBEXP #DECL ("VALUE" ATOM ANY 
STRING ANY ANY "OPTIONAL" ANY)] 8870>> 

<SET :CG_SBEXP ,:CG_SBEXP> 

<SET PROCLIST <CONS :CG_SEXP .PROCLIST>> 

<SETG :CG_SEXP %<RSUBR-ENTRY '[:CG_MODULE :CG_SEXP #DECL ("VALUE" ATOM ANY 
STRING ANY "OPTIONAL" ANY)] 8914>> 

<SET :CG_SEXP ,:CG_SEXP> 

<SET PROCLIST <CONS :CG_RECTYPEID .PROCLIST>> 

<SETG :CG_RECTYPEID %<RSUBR-ENTRY '[:CG_MODULE :CG_RECTYPEID #DECL ("VALUE" ATOM
ANY <VECTOR UVECTOR FIX FIX FIX> <OR ATOM FALSE> "OPTIONAL" ANY)] 8953>> 

<SET :CG_RECTYPEID ,:CG_RECTYPEID> 

<SET PROCLIST <CONS :CG_STRINGCON .PROCLIST>> 

<SETG :CG_STRINGCON %<RSUBR-ENTRY '[:CG_MODULE :CG_STRINGCON #DECL ("VALUE" ATOM
ANY ANY "OPTIONAL" ANY)] 9095>> 

<SET :CG_STRINGCON ,:CG_STRINGCON> 

<SET PROCLIST <CONS :CG_OP .PROCLIST>> 

<SETG :CG_OP %<RSUBR-ENTRY '[:CG_MODULE :CG_OP #DECL ("VALUE" ATOM ANY <VECTOR 
ANY ANY> "OPTIONAL" ANY)] 9132>> 

<SET :CG_OP ,:CG_OP> 

<SET PROCLIST <CONS :CG_GETOP .PROCLIST>> 

<SETG :CG_GETOP %<RSUBR-ENTRY '[:CG_MODULE :CG_GETOP #DECL ("VALUE" ATOM ANY ANY
STRING "OPTIONAL" ANY)] 9243>> 

<SET :CG_GETOP ,:CG_GETOP> 

<SET PROCLIST <CONS :CG_ESCOPE .PROCLIST>> 

<SETG :CG_ESCOPE %<RSUBR-ENTRY '[:CG_MODULE :CG_ESCOPE #DECL ("VALUE" ATOM FIX 
"OPTIONAL" ANY)] 9286>> 

<SET :CG_ESCOPE ,:CG_ESCOPE> 

<SET PROCLIST <CONS :CG_OP_CALL .PROCLIST>> 

<SETG :CG_OP_CALL %<RSUBR-ENTRY '[:CG_MODULE :CG_OP_CALL #DECL ("VALUE" ATOM ANY
STRING STRING <VECTOR UVECTOR FIX FIX FIX> <OR ATOM FALSE> "OPTIONAL" ANY)] 9331
>> 

<SET :CG_OP_CALL ,:CG_OP_CALL> 

<SET PROCLIST <CONS :CG_OP_CALLP .PROCLIST>> 

<SETG :CG_OP_CALLP %<RSUBR-ENTRY '[:CG_MODULE :CG_OP_CALLP #DECL ("VALUE" ATOM 
ANY STRING STRING <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <OR 
ATOM FALSE> "OPTIONAL" ANY)] 9405>> 

<SET :CG_OP_CALLP ,:CG_OP_CALLP> 

<SET PROCLIST <CONS :CG_DU_CALLP .PROCLIST>> 

<SETG :CG_DU_CALLP %<RSUBR-ENTRY '[:CG_MODULE :CG_DU_CALLP #DECL ("VALUE" ATOM 
ANY ANY STRING <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <OR 
ATOM FALSE> "OPTIONAL" ANY)] 9498>> 

<SET :CG_DU_CALLP ,:CG_DU_CALLP> 

<SET PROCLIST <CONS :CG_ONEUP .PROCLIST>> 

<SETG :CG_ONEUP %<RSUBR-ENTRY '[:CG_MODULE :CG_ONEUP #DECL ("VALUE" ATOM ANY FIX
"OPTIONAL" ANY)] 9597>> 

<SET :CG_ONEUP ,:CG_ONEUP> 

<SET PROCLIST <CONS :CG_RECGET .PROCLIST>> 

<SETG :CG_RECGET %<RSUBR-ENTRY '[:CG_MODULE :CG_RECGET #DECL ("VALUE" ATOM ANY 
FIX "OPTIONAL" ANY)] 9637>> 

<SET :CG_RECGET ,:CG_RECGET> 

<SET PROCLIST <CONS :CG_RECPUT .PROCLIST>> 

<SETG :CG_RECPUT %<RSUBR-ENTRY '[:CG_MODULE :CG_RECPUT #DECL ("VALUE" ATOM ANY 
FIX "OPTIONAL" ANY)] 9679>> 

<SET :CG_RECPUT ,:CG_RECPUT> 

<SET PROCLIST <CONS :CG_CONSTLIST .PROCLIST>> 

<SETG :CG_CONSTLIST %<RSUBR-ENTRY '[:CG_MODULE :CG_CONSTLIST #DECL ("VALUE" ATOM
ANY <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 9721>> 

<SET :CG_CONSTLIST ,:CG_CONSTLIST> 

<SET PROCLIST <CONS :CG_CONST .PROCLIST>> 

<SETG :CG_CONST %<RSUBR-ENTRY '[:CG_MODULE :CG_CONST #DECL ("VALUE" ATOM ANY ANY
"OPTIONAL" ANY)] 9791>> 

<SET :CG_CONST ,:CG_CONST> 

<SET PROCLIST <CONS :CG_CASTE .PROCLIST>> 

<SETG :CG_CASTE %<RSUBR-ENTRY '[:CG_MODULE :CG_CASTE #DECL ("VALUE" ATOM ANY <
VECTOR ANY ANY> "OPTIONAL" ANY)] 9918>> 

<SET :CG_CASTE ,:CG_CASTE> 

<SET PROCLIST <CONS :CG_FORCE .PROCLIST>> 

<SETG :CG_FORCE %<RSUBR-ENTRY '[:CG_MODULE :CG_FORCE #DECL ("VALUE" ATOM ANY <
VECTOR ANY ANY> "OPTIONAL" ANY)] 9954>> 

<SET :CG_FORCE ,:CG_FORCE> 

"Pass 2 for CG4 done in 182.95588 seconds.
" 

"***** CLU COMPILER ***** THURSDAY, 28 AUG 1975 07:05 EDT *****" 

<SET REASONABLE T> 

<SET GLUE T> 

<OR <BOUND? PROCLIST> <SET PROCLIST ()>> 

<SET PROCLIST <CONS :EM$DS .PROCLIST>> 

<SETG :EM$DS %<RSUBR-ENTRY '[:CG_MODULE :EM$DS #DECL ("VALUE" ATOM FIX 
"OPTIONAL" ANY)] 9990>> 

<SET :EM$DS ,:EM$DS> 

<PUTPROP :EM DS ,:EM$DS> 

<SET PROCLIST <CONS :EM$D .PROCLIST>> 

<SETG :EM$D %<RSUBR-ENTRY '[:CG_MODULE :EM$D #DECL ("VALUE" ATOM FIX "OPTIONAL" 
ANY)] 10028>> 

<SET :EM$D ,:EM$D> 

<PUTPROP :EM D ,:EM$D> 

<SET PROCLIST <CONS :EM$LPS .PROCLIST>> 

<SETG :EM$LPS %<RSUBR-ENTRY '[:CG_MODULE :EM$LPS #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 10062>> 

<SET :EM$LPS ,:EM$LPS> 

<PUTPROP :EM LPS ,:EM$LPS> 

<SET PROCLIST <CONS :EM$LIST .PROCLIST>> 

<SETG :EM$LIST %<RSUBR-ENTRY '[:CG_MODULE :EM$LIST #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 10104>> 

<SET :EM$LIST ,:EM$LIST> 

<PUTPROP :EM LIST ,:EM$LIST> 

<SET PROCLIST <CONS :EM$LITS .PROCLIST>> 

<SETG :EM$LITS %<RSUBR-ENTRY '[:CG_MODULE :EM$LITS #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 10146>> 

<SET :EM$LITS ,:EM$LITS> 

<PUTPROP :EM LITS ,:EM$LITS> 

<SET PROCLIST <CONS :EM$QS .PROCLIST>> 

<SETG :EM$QS %<RSUBR-ENTRY '[:CG_MODULE :EM$QS #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 10184>> 

<SET :EM$QS ,:EM$QS> 

<PUTPROP :EM QS ,:EM$QS> 

<SET PROCLIST <CONS :EM$S .PROCLIST>> 

<SETG :EM$S %<RSUBR-ENTRY '[:CG_MODULE :EM$S #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 10218>> 

<SET :EM$S ,:EM$S> 

<PUTPROP :EM S ,:EM$S> 

<SET PROCLIST <CONS :EM$SS .PROCLIST>> 

<SETG :EM$SS %<RSUBR-ENTRY '[:CG_MODULE :EM$SS #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 10252>> 

<SET :EM$SS ,:EM$SS> 

<PUTPROP :EM SS ,:EM$SS> 

<SET PROCLIST <CONS :EM$LA .PROCLIST>> 

<SETG :EM$LA %<RSUBR-ENTRY '[:CG_MODULE :EM$LA #DECL ("VALUE" ATOM "OPTIONAL" 
ANY)] 10290>> 

<SET :EM$LA ,:EM$LA> 

<PUTPROP :EM LA ,:EM$LA> 

<SET PROCLIST <CONS :EM$RA .PROCLIST>> 

<SETG :EM$RA %<RSUBR-ENTRY '[:CG_MODULE :EM$RA #DECL ("VALUE" ATOM "OPTIONAL" 
ANY)] 10325>> 

<SET :EM$RA ,:EM$RA> 

<PUTPROP :EM RA ,:EM$RA> 

<SET PROCLIST <CONS :EM$RRA .PROCLIST>> 

<SETG :EM$RRA %<RSUBR-ENTRY '[:CG_MODULE :EM$RRA #DECL ("VALUE" ATOM "OPTIONAL" 
ANY)] 10360>> 

<SET :EM$RRA ,:EM$RRA> 

<PUTPROP :EM RRA ,:EM$RRA> 

<SET PROCLIST <CONS :EM$LREPEAT .PROCLIST>> 

<SETG :EM$LREPEAT %<RSUBR-ENTRY '[:CG_MODULE :EM$LREPEAT #DECL ("VALUE" ATOM 
"OPTIONAL" ANY)] 10394>> 

<SET :EM$LREPEAT ,:EM$LREPEAT> 

<PUTPROP :EM LREPEAT ,:EM$LREPEAT> 

<SET PROCLIST <CONS :EM$LDEF .PROCLIST>> 

<SETG :EM$LDEF %<RSUBR-ENTRY '[:CG_MODULE :EM$LDEF #DECL ("VALUE" ATOM 
"OPTIONAL" ANY)] 10428>> 

<SET :EM$LDEF ,:EM$LDEF> 

<PUTPROP :EM LDEF ,:EM$LDEF> 

<SET PROCLIST <CONS :EM$LCOND .PROCLIST>> 

<SETG :EM$LCOND %<RSUBR-ENTRY '[:CG_MODULE :EM$LCOND #DECL ("VALUE" ATOM 
"OPTIONAL" ANY)] 10462>> 

<SET :EM$LCOND ,:EM$LCOND> 

<PUTPROP :EM LCOND ,:EM$LCOND> 

<SET PROCLIST <CONS :EM$LCONDL .PROCLIST>> 

<SETG :EM$LCONDL %<RSUBR-ENTRY '[:CG_MODULE :EM$LCONDL #DECL ("VALUE" ATOM 
"OPTIONAL" ANY)] 10496>> 

<SET :EM$LCONDL ,:EM$LCONDL> 

<PUTPROP :EM LCONDL ,:EM$LCONDL> 

<SET PROCLIST <CONS :EM$T .PROCLIST>> 

<SETG :EM$T %<RSUBR-ENTRY '[:CG_MODULE :EM$T #DECL ("VALUE" ATOM "OPTIONAL" ANY)
] 10530>> 

<SET :EM$T ,:EM$T> 

<PUTPROP :EM T ,:EM$T> 

<SET PROCLIST <CONS :EM$NIX .PROCLIST>> 

<SETG :EM$NIX %<RSUBR-ENTRY '[:CG_MODULE :EM$NIX #DECL ("VALUE" ATOM "OPTIONAL" 
ANY)] 10564>> 

<SET :EM$NIX ,:EM$NIX> 

<PUTPROP :EM NIX ,:EM$NIX> 

<SET PROCLIST <CONS :EM$LPROG .PROCLIST>> 

<SETG :EM$LPROG %<RSUBR-ENTRY '[:CG_MODULE :EM$LPROG #DECL ("VALUE" ATOM 
"OPTIONAL" ANY)] 10598>> 

<SET :EM$LPROG ,:EM$LPROG> 

<PUTPROP :EM LPROG ,:EM$LPROG> 

<SET PROCLIST <CONS :EM$LSET .PROCLIST>> 

<SETG :EM$LSET %<RSUBR-ENTRY '[:CG_MODULE :EM$LSET #DECL ("VALUE" ATOM 
"OPTIONAL" ANY)] 10632>> 

<SET :EM$LSET ,:EM$LSET> 

<PUTPROP :EM LSET ,:EM$LSET> 

<SET PROCLIST <CONS :EM$GSET .PROCLIST>> 

<SETG :EM$GSET %<RSUBR-ENTRY '[:CG_MODULE :EM$GSET #DECL ("VALUE" ATOM 
"OPTIONAL" ANY)] 10666>> 

<SET :EM$GSET ,:EM$GSET> 

<PUTPROP :EM GSET ,:EM$GSET> 

<SET PROCLIST <CONS :EM$LB .PROCLIST>> 

<SETG :EM$LB %<RSUBR-ENTRY '[:CG_MODULE :EM$LB #DECL ("VALUE" ATOM "OPTIONAL" 
ANY)] 10700>> 

<SET :EM$LB ,:EM$LB> 

<PUTPROP :EM LB ,:EM$LB> 

<SET PROCLIST <CONS :EM$RB .PROCLIST>> 

<SETG :EM$RB %<RSUBR-ENTRY '[:CG_MODULE :EM$RB #DECL ("VALUE" ATOM "OPTIONAL" 
ANY)] 10735>> 

<SET :EM$RB ,:EM$RB> 

<PUTPROP :EM RB ,:EM$RB> 

<SET PROCLIST <CONS :EM$LP .PROCLIST>> 

<SETG :EM$LP %<RSUBR-ENTRY '[:CG_MODULE :EM$LP #DECL ("VALUE" ATOM "OPTIONAL" 
ANY)] 10770>> 

<SET :EM$LP ,:EM$LP> 

<PUTPROP :EM LP ,:EM$LP> 

<SET PROCLIST <CONS :EM$RP .PROCLIST>> 

<SETG :EM$RP %<RSUBR-ENTRY '[:CG_MODULE :EM$RP #DECL ("VALUE" ATOM "OPTIONAL" 
ANY)] 10805>> 

<SET :EM$RP ,:EM$RP> 

<PUTPROP :EM RP ,:EM$RP> 

<SET PROCLIST <CONS :EM$NL .PROCLIST>> 

<SETG :EM$NL %<RSUBR-ENTRY '[:CG_MODULE :EM$NL #DECL ("VALUE" ATOM "OPTIONAL" 
ANY)] 10840>> 

<SET :EM$NL ,:EM$NL> 

<PUTPROP :EM NL ,:EM$NL> 

<SET PROCLIST <CONS :EM$LAS .PROCLIST>> 

<SETG :EM$LAS %<RSUBR-ENTRY '[:CG_MODULE :EM$LAS #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 10875>> 

<SET :EM$LAS ,:EM$LAS> 

<PUTPROP :EM LAS ,:EM$LAS> 

<SET PROCLIST <CONS :EM$FORM .PROCLIST>> 

<SETG :EM$FORM %<RSUBR-ENTRY '[:CG_MODULE :EM$FORM #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 10917>> 

<SET :EM$FORM ,:EM$FORM> 

<PUTPROP :EM FORM ,:EM$FORM> 

<SET PROCLIST <CONS :EM$CONT .PROCLIST>> 

<SETG :EM$CONT %<RSUBR-ENTRY '[:CG_MODULE :EM$CONT #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 10959>> 

<SET :EM$CONT ,:EM$CONT> 

<PUTPROP :EM CONT ,:EM$CONT> 

<SET PROCLIST <CONS :EM$CONTS .PROCLIST>> 

<SETG :EM$CONTS %<RSUBR-ENTRY '[:CG_MODULE :EM$CONTS #DECL ("VALUE" ATOM STRING 
"OPTIONAL" ANY)] 10997>> 

<SET :EM$CONTS ,:EM$CONTS> 

<PUTPROP :EM CONTS ,:EM$CONTS> 

<SET :EM (:EM)> 

<SET PROCLIST <CONS :GS$PARMNAMES .PROCLIST>> 

<SETG :GS$PARMNAMES %<RSUBR-ENTRY '[:CG_MODULE :GS$PARMNAMES #DECL ("VALUE" 
STRING <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 11039>> 

<SET :GS$PARMNAMES$TYPE :STRING> 

<SET :GS$PARMNAMES ,:GS$PARMNAMES> 

<PUTPROP :GS PARMNAMES ,:GS$PARMNAMES> 

<SET PROCLIST <CONS :GS$IDNAME .PROCLIST>> 

<SETG :GS$IDNAME %<RSUBR-ENTRY '[:CG_MODULE :GS$IDNAME #DECL ("VALUE" STRING ANY
"OPTIONAL" ANY)] 11171>> 

<SET :GS$IDNAME$TYPE :STRING> 

<SET :GS$IDNAME ,:GS$IDNAME> 

<PUTPROP :GS IDNAME ,:GS$IDNAME> 

<SET PROCLIST <CONS :GS$PARM_NAMES .PROCLIST>> 

<SETG :GS$PARM_NAMES %<RSUBR-ENTRY '[:CG_MODULE :GS$PARM_NAMES #DECL ("VALUE" <
VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 11256>
> 

<SET :GS$PARM_NAMES$TYPE (:ARRAY :IDN)> 

<SET :GS$PARM_NAMES ,:GS$PARM_NAMES> 

<PUTPROP :GS PARM_NAMES ,:GS$PARM_NAMES> 

<SET PROCLIST <CONS :GS$PARM_TYPES .PROCLIST>> 

<SETG :GS$PARM_TYPES %<RSUBR-ENTRY '[:CG_MODULE :GS$PARM_TYPES #DECL ("VALUE" <
VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 11383>
> 

<SET :GS$PARM_TYPES$TYPE (:ARRAY :TYPESPEC)> 

<SET :GS$PARM_TYPES ,:GS$PARM_TYPES> 

<PUTPROP :GS PARM_TYPES ,:GS$PARM_TYPES> 

<SET :GS (:GS)> 

"Pass 2 for EM done in 86.815368 seconds.
" 

"***** CLU COMPILER ***** MONDAY, 25 AUG 1975 12:11 EDT *****" 

<SET REASONABLE T> 

<SET GLUE T> 

<OR <BOUND? PROCLIST> <SET PROCLIST ()>> 

<SET PROCLIST <CONS :GK_FORCE .PROCLIST>> 

<SETG :GK_FORCE %<RSUBR-ENTRY '[:CG_MODULE :GK_FORCE #DECL ("VALUE" ATOM ANY ANY
"OPTIONAL" ANY)] 11508>> 

<SET :GK_FORCE ,:GK_FORCE> 

<SET PROCLIST <CONS :GK_FORCELIST .PROCLIST>> 

<SETG :GK_FORCELIST %<RSUBR-ENTRY '[:CG_MODULE :GK_FORCELIST #DECL ("VALUE" ATOM
ANY <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 11798>> 

<SET :GK_FORCELIST ,:GK_FORCELIST> 

<SET PROCLIST <CONS :GK_FORCEEL .PROCLIST>> 

<SETG :GK_FORCEEL %<RSUBR-ENTRY '[:CG_MODULE :GK_FORCEEL #DECL ("VALUE" ATOM ANY
<VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 11868>> 

<SET :GK_FORCEEL ,:GK_FORCEEL> 

<SET PROCLIST <CONS :GK_TAG .PROCLIST>> 

<SETG :GK_TAG %<RSUBR-ENTRY '[:CG_MODULE :GK_TAG #DECL ("VALUE" FIX ANY <VECTOR 
UVECTOR FIX FIX FIX> ANY "OPTIONAL" ANY)] 11943>> 

<SET :GK_TAG$TYPE :INT> 

<SET :GK_TAG ,:GK_TAG> 

<SET PROCLIST <CONS :GK_RECORDOP .PROCLIST>> 

<SETG :GK_RECORDOP %<RSUBR-ENTRY '[:CG_MODULE :GK_RECORDOP #DECL ("VALUE" FIX 
ANY <VECTOR UVECTOR FIX FIX FIX> STRING "OPTIONAL" ANY)] 12038>> 

<SET :GK_RECORDOP$TYPE :INT> 

<SET :GK_RECORDOP ,:GK_RECORDOP> 

<SET PROCLIST <CONS :GK_IS_FAKE .PROCLIST>> 

<SETG :GK_IS_FAKE %<RSUBR-ENTRY '[:CG_MODULE :GK_IS_FAKE #DECL ("VALUE" <OR ATOM
FALSE> ANY ANY "OPTIONAL" ANY)] 12131>> 

<SET :GK_IS_FAKE$TYPE :BOOL> 

<SET :GK_IS_FAKE ,:GK_IS_FAKE> 

<SET PROCLIST <CONS :GK_IS_PARM .PROCLIST>> 

<SETG :GK_IS_PARM %<RSUBR-ENTRY '[:CG_MODULE :GK_IS_PARM #DECL ("VALUE" <OR ATOM
FALSE> ANY ANY "OPTIONAL" ANY)] 12191>> 

<SET :GK_IS_PARM$TYPE :BOOL> 

<SET :GK_IS_PARM ,:GK_IS_PARM> 

<SET PROCLIST <CONS :GK_IS_LIT .PROCLIST>> 

<SETG :GK_IS_LIT %<RSUBR-ENTRY '[:CG_MODULE :GK_IS_LIT #DECL ("VALUE" <OR ATOM 
FALSE> ANY ANY "OPTIONAL" ANY)] 12259>> 

<SET :GK_IS_LIT$TYPE :BOOL> 

<SET :GK_IS_LIT ,:GK_IS_LIT> 

"Pass 2 for GK done in 123.60018 seconds.
" 

"***** CLU COMPILER ***** SATURDAY, 6 SEP 1975 11:26 EDT *****" 

<SET REASONABLE T> 

<SET GLUE T> 

<OR <BOUND? PROCLIST> <SET PROCLIST ()>> 

<SET PROCLIST <CONS :GT_EXPRLIST .PROCLIST>> 

<SETG :GT_EXPRLIST %<RSUBR-ENTRY '[:CG_MODULE :GT_EXPRLIST #DECL ("VALUE" <
VECTOR UVECTOR FIX FIX FIX> ANY <VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 
12334>> 

<SETG :GT_EXPRLIST$TYPE (:ARRAY :TYPESPEC)> 

<SET PROCLIST <CONS :GT_EXPR .PROCLIST>> 

<SETG :GT_EXPR %<RSUBR-ENTRY '[:CG_MODULE :GT_EXPR #DECL ("VALUE" ANY ANY ANY 
"OPTIONAL" ANY)] 12422>> 

<SETG :GT_EXPR$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_BINEXP .PROCLIST>> 

<SETG :GT_BINEXP %<RSUBR-ENTRY '[:CG_MODULE :GT_BINEXP #DECL ("VALUE" ANY ANY 
ANY ANY "OPTIONAL" ANY)] 12698>> 

<SETG :GT_BINEXP$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_RECCON .PROCLIST>> 

<SETG :GT_RECCON %<RSUBR-ENTRY '[:CG_MODULE :GT_RECCON #DECL ("VALUE" ANY ANY <
VECTOR UVECTOR FIX FIX FIX> "OPTIONAL" ANY)] 12772>> 

<SETG :GT_RECCON$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_ARRCON .PROCLIST>> 

<SETG :GT_ARRCON %<RSUBR-ENTRY '[:CG_MODULE :GT_ARRCON #DECL ("VALUE" ANY ANY <
VECTOR ANY <VECTOR UVECTOR FIX FIX FIX>> "OPTIONAL" ANY)] 12888>> 

<SETG :GT_ARRCON$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_OP .PROCLIST>> 

<SETG :GT_OP %<RSUBR-ENTRY '[:CG_MODULE :GT_OP #DECL ("VALUE" ANY ANY <VECTOR 
ANY ANY> "OPTIONAL" ANY)] 12929>> 

<SETG :GT_OP$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_INVOKE .PROCLIST>> 

<SETG :GT_INVOKE %<RSUBR-ENTRY '[:CG_MODULE :GT_INVOKE #DECL ("VALUE" ANY ANY <
VECTOR <VECTOR UVECTOR FIX FIX FIX> ANY> "OPTIONAL" ANY)] 12991>> 

<SETG :GT_INVOKE$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_CALL .PROCLIST>> 

<SETG :GT_CALL %<RSUBR-ENTRY '[:CG_MODULE :GT_CALL #DECL ("VALUE" ANY ANY ANY 
"OPTIONAL" ANY)] 13115>> 

<SETG :GT_CALL$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_SEL .PROCLIST>> 

<SETG :GT_SEL %<RSUBR-ENTRY '[:CG_MODULE :GT_SEL #DECL ("VALUE" ANY ANY <VECTOR 
ANY ANY> "OPTIONAL" ANY)] 13196>> 

<SETG :GT_SEL$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_TAG .PROCLIST>> 

<SETG :GT_TAG %<RSUBR-ENTRY '[:CG_MODULE :GT_TAG #DECL ("VALUE" ANY ANY ANY ANY 
"OPTIONAL" ANY)] 13239>> 

<SETG :GT_TAG$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_REF .PROCLIST>> 

<SETG :GT_REF %<RSUBR-ENTRY '[:CG_MODULE :GT_REF #DECL ("VALUE" ANY ANY <VECTOR 
ANY ANY> "OPTIONAL" ANY)] 13382>> 

<SETG :GT_REF$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_IDN .PROCLIST>> 

<SETG :GT_IDN %<RSUBR-ENTRY '[:CG_MODULE :GT_IDN #DECL ("VALUE" ANY ANY ANY 
"OPTIONAL" ANY)] 13461>> 

<SETG :GT_IDN$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_IDNCALL .PROCLIST>> 

<SETG :GT_IDNCALL %<RSUBR-ENTRY '[:CG_MODULE :GT_IDNCALL #DECL ("VALUE" ANY ANY 
ANY "OPTIONAL" ANY)] 13567>> 

<SETG :GT_IDNCALL$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_DOLLAR .PROCLIST>> 

<SETG :GT_DOLLAR %<RSUBR-ENTRY '[:CG_MODULE :GT_DOLLAR #DECL ("VALUE" ANY ANY 
ANY "OPTIONAL" ANY)] 13677>> 

<SETG :GT_DOLLAR$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_OPCALL .PROCLIST>> 

<SETG :GT_OPCALL %<RSUBR-ENTRY '[:CG_MODULE :GT_OPCALL #DECL ("VALUE" ANY ANY <
VECTOR ANY ANY> "OPTIONAL" ANY)] 13779>> 

<SETG :GT_OPCALL$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_STRINGCALL .PROCLIST>> 

<SETG :GT_STRINGCALL %<RSUBR-ENTRY '[:CG_MODULE :GT_STRINGCALL #DECL ("VALUE" 
ANY ANY ANY STRING "OPTIONAL" ANY)] 13819>> 

<SETG :GT_STRINGCALL$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_EMPTY .PROCLIST>> 

<SETG :GT_EMPTY %<RSUBR-ENTRY '[:CG_MODULE :GT_EMPTY #DECL ("VALUE" ANY 
"OPTIONAL" ANY)] 14273>> 

<SETG :GT_EMPTY$TYPE :TYPESPEC> 

<SET PROCLIST <CONS :GT_CONST .PROCLIST>> 

<SETG :GT_CONST %<RSUBR-ENTRY '[:CG_MODULE :GT_CONST #DECL ("VALUE" ANY ANY ANY 
"OPTIONAL" ANY)] 14303>> 

<SETG :GT_CONST$TYPE :TYPESPEC> 

"Pass 2 for GT done in 124.23224 seconds.
" 

"***** CLU COMPILER ***** FRIDAY, 5 SEP 1975 19:20 EDT *****" 

<SET REASONABLE T> 

<SET GLUE T> 

<OR <BOUND? PROCLIST> <SET PROCLIST ()>> 

<SET PROCLIST <CONS :ZEN$CREATE .PROCLIST>> 

<SETG :ZEN$CREATE %<RSUBR-ENTRY '[:CG_MODULE :ZEN$CREATE #DECL ("VALUE" ANY 
"OPTIONAL" ANY)] 14385>> 

<SETG :ZEN$CREATE$TYPE :ZEN> 

<PUTPROP :ZEN CREATE ,:ZEN$CREATE> 

<SET PROCLIST <CONS :ZEN$NEW_MODULE .PROCLIST>> 

<SETG :ZEN$NEW_MODULE %<RSUBR-ENTRY '[:CG_MODULE :ZEN$NEW_MODULE #DECL ("VALUE" 
ATOM <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX
FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR 
FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> ANY STRING "OPTIONAL" ANY)] 14496
>> 

<PUTPROP :ZEN NEW_MODULE ,:ZEN$NEW_MODULE> 

<SET PROCLIST <CONS :ZEN$ESCOPE .PROCLIST>> 

<SETG :ZEN$ESCOPE %<RSUBR-ENTRY '[:CG_MODULE :ZEN$ESCOPE #DECL ("VALUE" FIX <
VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX FIX <
VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX
FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 14584>> 

<SETG :ZEN$ESCOPE$TYPE :INT> 

<PUTPROP :ZEN ESCOPE ,:ZEN$ESCOPE> 

<SET PROCLIST <CONS :ZEN$NEXT_HANDLER .PROCLIST>> 

<SETG :ZEN$NEXT_HANDLER %<RSUBR-ENTRY '[:CG_MODULE :ZEN$NEXT_HANDLER #DECL (
"VALUE" FIX <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM 
FALSE> FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 14618>> 

<SETG :ZEN$NEXT_HANDLER$TYPE :INT> 

<PUTPROP :ZEN NEXT_HANDLER ,:ZEN$NEXT_HANDLER> 

<SET PROCLIST <CONS :ZEN$NEXT_ESCOPE .PROCLIST>> 

<SETG :ZEN$NEXT_ESCOPE %<RSUBR-ENTRY '[:CG_MODULE :ZEN$NEXT_ESCOPE #DECL (
"VALUE" FIX <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM 
FALSE> FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 14655>> 

<SETG :ZEN$NEXT_ESCOPE$TYPE :INT> 

<PUTPROP :ZEN NEXT_ESCOPE ,:ZEN$NEXT_ESCOPE> 

<SET PROCLIST <CONS :ZEN$PUSH_ESCOPE .PROCLIST>> 

<SETG :ZEN$PUSH_ESCOPE %<RSUBR-ENTRY '[:CG_MODULE :ZEN$PUSH_ESCOPE #DECL (
"VALUE" ATOM <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM 
FALSE> FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> FIX "OPTIONAL" ANY)] 
14692>> 

<PUTPROP :ZEN PUSH_ESCOPE ,:ZEN$PUSH_ESCOPE> 

<SET PROCLIST <CONS :ZEN$POP_ESCOPE .PROCLIST>> 

<SETG :ZEN$POP_ESCOPE %<RSUBR-ENTRY '[:CG_MODULE :ZEN$POP_ESCOPE #DECL ("VALUE" 
ATOM <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX
FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR 
FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 14729>> 

<PUTPROP :ZEN POP_ESCOPE ,:ZEN$POP_ESCOPE> 

<SET PROCLIST <CONS :ZEN$NEED_FOM .PROCLIST>> 

<SETG :ZEN$NEED_FOM %<RSUBR-ENTRY '[:CG_MODULE :ZEN$NEED_FOM #DECL ("VALUE" <OR 
ATOM FALSE> <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM 
FALSE> FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 14764>> 

<SETG :ZEN$NEED_FOM$TYPE :BOOL> 

<PUTPROP :ZEN NEED_FOM ,:ZEN$NEED_FOM> 

<SET PROCLIST <CONS :ZEN$SET_PARMS .PROCLIST>> 

<SETG :ZEN$SET_PARMS %<RSUBR-ENTRY '[:CG_MODULE :ZEN$SET_PARMS #DECL ("VALUE" 
ATOM <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX
FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR 
FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> <VECTOR UVECTOR FIX FIX FIX> 
"OPTIONAL" ANY)] 14796>> 

<PUTPROP :ZEN SET_PARMS ,:ZEN$SET_PARMS> 

<SET PROCLIST <CONS :ZEN$GET_PARMS .PROCLIST>> 

<SETG :ZEN$GET_PARMS %<RSUBR-ENTRY '[:CG_MODULE :ZEN$GET_PARMS #DECL ("VALUE" <
VECTOR UVECTOR FIX FIX FIX> <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY 
STRING <OR ATOM FALSE> FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX 
FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> 
"OPTIONAL" ANY)] 14830>> 

<SETG :ZEN$GET_PARMS$TYPE (:ARRAY :IDN)> 

<PUTPROP :ZEN GET_PARMS ,:ZEN$GET_PARMS> 

<SET PROCLIST <CONS :ZEN$PUT_STMT .PROCLIST>> 

<SETG :ZEN$PUT_STMT %<RSUBR-ENTRY '[:CG_MODULE :ZEN$PUT_STMT #DECL ("VALUE" ATOM
<VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX FIX 
<VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX 
FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> ANY "OPTIONAL" ANY)] 14862>> 

<PUTPROP :ZEN PUT_STMT ,:ZEN$PUT_STMT> 

<SET PROCLIST <CONS :ZEN$GET_STMT .PROCLIST>> 

<SETG :ZEN$GET_STMT %<RSUBR-ENTRY '[:CG_MODULE :ZEN$GET_STMT #DECL ("VALUE" ANY 
<VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX FIX 
<VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX 
FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 14898>> 

<SETG :ZEN$GET_STMT$TYPE :STMT> 

<PUTPROP :ZEN GET_STMT ,:ZEN$GET_STMT> 

<SET PROCLIST <CONS :ZEN$GET_LINENO .PROCLIST>> 

<SETG :ZEN$GET_LINENO %<RSUBR-ENTRY '[:CG_MODULE :ZEN$GET_LINENO #DECL ("VALUE" 
FIX <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX 
FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR 
FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 14930>> 

<SETG :ZEN$GET_LINENO$TYPE :INT> 

<PUTPROP :ZEN GET_LINENO ,:ZEN$GET_LINENO> 

<SET PROCLIST <CONS :ZEN$ABSTRACT_TYPE .PROCLIST>> 

<SETG :ZEN$ABSTRACT_TYPE %<RSUBR-ENTRY '[:CG_MODULE :ZEN$ABSTRACT_TYPE #DECL (
"VALUE" ANY <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM 
FALSE> FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 14964>> 

<SETG :ZEN$ABSTRACT_TYPE$TYPE :TYPESPEC> 

<PUTPROP :ZEN ABSTRACT_TYPE ,:ZEN$ABSTRACT_TYPE> 

<SET PROCLIST <CONS :ZEN$CONCRETE_TYPE .PROCLIST>> 

<SETG :ZEN$CONCRETE_TYPE %<RSUBR-ENTRY '[:CG_MODULE :ZEN$CONCRETE_TYPE #DECL (
"VALUE" ANY <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM 
FALSE> FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 14996>> 

<SETG :ZEN$CONCRETE_TYPE$TYPE :TYPESPEC> 

<PUTPROP :ZEN CONCRETE_TYPE ,:ZEN$CONCRETE_TYPE> 

<SET PROCLIST <CONS :ZEN$MODULE_NAME .PROCLIST>> 

<SETG :ZEN$MODULE_NAME %<RSUBR-ENTRY '[:CG_MODULE :ZEN$MODULE_NAME #DECL (
"VALUE" STRING <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM 
FALSE> FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 15028>> 

<SETG :ZEN$MODULE_NAME$TYPE :STRING> 

<PUTPROP :ZEN MODULE_NAME ,:ZEN$MODULE_NAME> 

<SET PROCLIST <CONS :ZEN$FINISH .PROCLIST>> 

<SETG :ZEN$FINISH %<RSUBR-ENTRY '[:CG_MODULE :ZEN$FINISH #DECL ("VALUE" ATOM <
VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX FIX <
VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX
FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> "OPTIONAL" ANY)] 15060>> 

<PUTPROP :ZEN FINISH ,:ZEN$FINISH> 

<SET PROCLIST <CONS :ZEN$RECTYPEID .PROCLIST>> 

<SETG :ZEN$RECTYPEID %<RSUBR-ENTRY '[:CG_MODULE :ZEN$RECTYPEID #DECL ("VALUE" <
VECTOR [3 FIX]> <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM
FALSE> FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> <VECTOR UVECTOR FIX FIX 
FIX> <OR ATOM FALSE> "OPTIONAL" ANY)] 15107>> 

<SETG :ZEN$RECTYPEID$TYPE R$2620$3$0> 

<PUTPROP :ZEN RECTYPEID ,:ZEN$RECTYPEID> 

<SET PROCLIST <CONS :ZEN$GENALL .PROCLIST>> 

<SETG :ZEN$GENALL %<RSUBR-ENTRY '[:CG_MODULE :ZEN$GENALL #DECL ("VALUE" ATOM <
VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX FIX <
VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX
FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> <VECTOR UVECTOR FIX FIX FIX> STRING 
"OPTIONAL" ANY)] 15310>> 

<PUTPROP :ZEN GENALL ,:ZEN$GENALL> 

<SET PROCLIST <CONS :ZEN$PARMSP .PROCLIST>> 

<SETG :ZEN$PARMSP %<RSUBR-ENTRY '[:CG_MODULE :ZEN$PARMSP #DECL ("VALUE" <OR ATOM
FALSE> <VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> 
FIX FIX <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR 
UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> <VECTOR UVECTOR FIX FIX 
FIX> "OPTIONAL" ANY)] 15529>> 

<SETG :ZEN$PARMSP$TYPE :BOOL> 

<PUTPROP :ZEN PARMSP ,:ZEN$PARMSP> 

<SET PROCLIST <CONS :ZEN$PUSHTAG .PROCLIST>> 

<SETG :ZEN$PUSHTAG %<RSUBR-ENTRY '[:CG_MODULE :ZEN$PUSHTAG #DECL ("VALUE" ATOM <
VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX FIX <
VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX
FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> ANY ANY "OPTIONAL" ANY)] 15568>> 

<PUTPROP :ZEN PUSHTAG ,:ZEN$PUSHTAG> 

<SET PROCLIST <CONS :ZEN$POPTAG .PROCLIST>> 

<SETG :ZEN$POPTAG %<RSUBR-ENTRY '[:CG_MODULE :ZEN$POPTAG #DECL ("VALUE" ATOM <
VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX FIX <
VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX
FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> ANY "OPTIONAL" ANY)] 15619>> 

<PUTPROP :ZEN POPTAG ,:ZEN$POPTAG> 

<SET PROCLIST <CONS :ZEN$CURTYPE .PROCLIST>> 

<SETG :ZEN$CURTYPE %<RSUBR-ENTRY '[:CG_MODULE :ZEN$CURTYPE #DECL ("VALUE" ANY <
VECTOR ANY ANY <VECTOR UVECTOR FIX FIX FIX> ANY STRING <OR ATOM FALSE> FIX FIX <
VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX FIX> <VECTOR UVECTOR FIX FIX
FIX> <VECTOR UVECTOR FIX FIX FIX> FIX> ANY "OPTIONAL" ANY)] 15725>> 

<AND <ASSIGNED? GLUE> .GLUE <PUT ,:CG_MODULE GLUE ![336613652 1048848 268439557 
17246811136 21038353 17180987648 17184063492 4581230594 327688 1074020356 
4456450 32004 8390656341 5641426752 328724 18522063940 18325192704 2147500032 
4043640576 2147612624 33639366928 268439808 -34292612096 17179934725 2671772160 
1090796669 18203546749 -2885518080 -29780327360 8598323220 17181966417 
18317702212 17213456384 5368844101 5704503797 -2879111168 365953024 21038353 
17179930624 -3938382064 17200988432 2181103633 16777280 89344 328724 18522062884
4425073732 537395201 17181984021 -12884900604 5441060928 8590266369 4296015876 
88342852 352326928 1358975232 5653984320 5435823168 5435901012 17201103172 
339743808 5434195968 84153413 4473924 5505040 25569595648 -34326183856 
1077936640 -18186166444 33810366532 17213456384 5435826187 -16089218048 
17580376401 5439817041 4095692804 18149697 71581728 2147488829 1073775093 
5391581184 1346454608 71303492 18255710208 335552528 285216768 4546626837 
4551099394 134218048 537919760 268439557 5655036032 8589955072 -34292612096 
17180131652 68441552 5136 21764243712 -34292612096 17179934804 390070272 
21543273728 1140850944 4563468288 31478530080 2147488832 18255708288 24577 
5660016640 21038353 17180987665 1376260 6392398912 8598323220 269484160 
12633327573 8452591633 4303364096 1358956546 -4022304512 4395094100 18539823444 
18203792385 20729920 4581230594 331585 2129221 1463812097 17453618176 4303372292
17184063504 5505025 31138512976 17519935492 537919760 268436480 86016 1560281089
17453618176 1145307648 -34359656446 1161838032 1314897 5368774784 17184325696 
68230993 2448937460 33629740871 -12360101388 18317644032 -34326183856 134238551 
-12622954496 84153413 1311685 31138518032 21764243473 4303364096 1358168584 
4685037588 4379983872 17204248577 17453618176 4563411012 340017184 2147488832 
536940800 -34326183855 8454269 1413813629 4580212768 5243008 33572180 252991296 
328724 18522063872 -34342895599 16777280 7671933 2181300231 21760081984 
1140867072 18270404608 31491948576 85938240 6259012608 -34090252844 18219270273 
268697729 17247073661 16781399 17179869184 21543273728 1115600 5259588 
21475086337 18324916224 -34359656448 2180273984 21038353 17180918273 17826048 
67108865 4043309056 542179831 -12884885504 268436480 21743271940 1380352 
17185390196 82181 4630512896 4298923892 1314897 5368725519 5637273408 21038353 
17180987665 4563468288 16388 17184063555 -17178755055 16777487 5521695 
19293140033 8396862964 16110599185 4031806788 18203791485 17704285248 1140867072
17448817664 -3942133259 -3198730240 21038353 17180135429 -12884881343 
18337497344 4298920960 24964498692 5441060925 4303484224 8674083167 24964498692 
5441060932 18324914176 130031872 3155169149 88359938 134218052 33571329 
-3149659648 -34359655424 8606716160 4295032832 22548583504 -34275850237 
-15752478716 17184063552 5758779392 1346454608 71582720 262148 608368592 
25570529405 18324922376 1328128 8589934600 4383179252 18320851072 21221376 
2168784901 63242324 21743341569 1049922 18255987325 2097664125 23420993536 
21543273728 1023542528 5637148767 17523635200 84153413 257280 84153413 257280 
84153413 257280 84153413 4202512 285216768 4546957556 18204390467 -12600458287 
4098085135 18317635668 18204389457 4098085120 21743603717 4300275957 4362076416 
131072007 -11743968255 18254938132 21832466513 1359953925 4300338448 1358975232 
4441088 2117888 21743603717 4300275793 84935951 -26575110139 1094995968 
18253611008 67125280 24964497488 17519935488 16175363072 336613652 987265 
-12884881343 18337497156 17213456384 5368841309 328724 18522062080 1560281168 
17519935492 18190974980 18255710208 340000800 286263298 327680 8724160837 
4580212768 4294968593 4295098448 1409417216 -34359476192 532480 -32995471104 
-34326183856 134288756 20545 18337497148 1074122752 1346454608 3932164 97517573 
1094995968 4299345920 1346454608 67240192 4563468288 19278582816 24964497488 
17519935492 537919760 268436605 6396446160 328724 18522062088 8711569428 
4379983872 4194768 5259588 21475086351 4297080892 17188353024 336613652 512 
31138518032 21764243456 2164262720 21038353 17180868624 17196914496 21038353 
17180983424 4311748864 4294983716 8388616000 8591096957 152109080 8607826048 
8589955072 -34321711072 85938240 6259227680 155451452 18190943292 18190943292 
17179952064 621871119 4546957072 -3158033341 -16042935232 21250048 4311748752 
33570179024 2164539424 21743621188 5200 1358954576 1073741885 21743273233 33348 
3 -11744035715 18320720384 2097414416 252768527 4547736048 18190943292 
18190943292 19261358144 5725503491 -16043129916 16390360899 -15821893821 
-16042102513 4547736636 18190701628 1028722688 -4026200304 -4210093836 
16177185732 16177184828 33570289601 -3219173135 4044296432 339477461 4563464448 
21727605007 4546957072 -3158033137 4547735553 18186753297 15794256 -4010733808 
-4210093836 16106475761 84148240 1142280192 20545 18337497156 17213456384 
5368841309 328724 18522062880 4296081424 4456448 37814353 83906816 1096024320 
72700996 18186510464 9232 21542995281 256966676 33629740871 -12360101388 
17201096512 20545 18337498113 8483840 336613652 262516 1314897 5368712961 
1048948 1314897 5368774784 17184325696 16778244 339738896 -1660944383 
17453618176 15796253 328724 18522046524 17213898752 5385818432 268960768 
18253873153 -2919989985 19279071184 -1623100416 5259588 21474836484 544473089 
17453618176 67174516 1314897 5368710145 -12884881343 18337498112 5436995521 
4580212768 5243008 4651483152 8451588596 2097280464 328724 18522046983 
17179951365 4630515984 2097665 17826048 17043727 17181179927 17179870468 
5441060925 68632576 5385818432 32837441 -12884881343 18337498113 1106513924 
2097189125 31138514180 5441060928 4364124416 17310943234 33555025984 5855248404 
4379983873 68190727 -12817726988 537523202 18270410560 5259588 21475086461 
-12884881343 18337498064 2110783493 1094995968 16375078144 84153413 279554 
134218048 541446144 1346454608 67240192 4563468288 17536734275 -12883574460 
343753729 18227658752 336613652 1029120 336613652 1029120 336613652 552192 
21038353 17179915264 336613652 1581492 82181 4630512002 7314866196 4379983872 
2261778433 17453618176 188743700 4379983872 3019899201 1360265216 -32531021563 
1094995968 1828717588 4379983872 7314870352 17519935491 -5100206844 5441060926 
-12883832767 18337498093 17105940 18522062544 273695044 21475093760 4379120709 
4116481 1346454608 65863696 21543273728 1053819141 1094995968 16861106256 
17519935491 -5100206844 5441060870 -12884634608 21764243483 17180938305 
18337497197 4276485 4630512052 17105940 18522048208 5259588 21474861190 
-12884900604 5441060870 2261778432 21543273728 101400576 1346454608 6325968 
328724 18522063808 18320851072 21233696 286263298 331520 136314900 21541945424 
17519935492 537919760 268436604 8596162561 82181 4630515953 4563472640 
-34326183855 4295492676 537395201 17182000404 17179889729 18337498172 
18320737344 8598323220 18253742097 4303364096 1342313553 82181 4630515720 
1074020356 1114112 4580212768 5308424 8606716160 4294983701 5654970369 
4563927552 84934784 9730917701 18254938173 18253942789 4294968320 268436944 5136
21764243473 4303364096 1342210327 17179951365 4630511889 134348800 21743304724 
24964498692 5441060868 18255710208 335552521 4635816064 553648129 17453618176 
4563468571 -17094995968 4303488320 16108290048 1346454608 71311361 17189338372 
328724 18522062880 4296081424 32834560 84153413 4202512 285216768 273142800 
1314897 5368774920 8607826048 8589955072 2164805888 21038353 17180954889 
17717788944 268439617 4563402752 22565621830 18253616400 1413480448 1140933633 
18253615249 18864170084 26910737409 18254938148 17201108033 18254937684 5136 
21764243712 1076118530 5308501 1073742145 1360265232 -4008705775 134348800 
21475360768 8594129428 17182003200 336613652 8258 17180197908 18522063812 
18253857860 2359301 1094995968 17188274180 17184063504 1413485632 273743881 
4295234831 -28991029168 17519935492 537919760 268436480 10003304448 21038353 
17179869200 335545604 5441060928 8606716160 4294984772 17213456384 5368840337 
135550012 8590917780 263489 4296015888 17449419717 0 8594030592 21543273728 
1075841296 1413481536 1073746160 -34355805631 22817013765 1094995968 17213489169
16777340 18320728304 2147635280 1447034880 21543273728 1075843073 4296015876 
8432 2147636225 17179870468 5441060864 135528453 1094995968 17213489167 
4547735823 4548281284 16177185039 4311372864 1140867072 4563464463 6781944772 
16177185039 6480447060 18253857812 16211232340 18253858384 18274861059 
-16042935229 -16084908996 18193055746 1358954882 1358954562 1360003080 245760 
1006764041 21726498560 -33738981376 17516482836 9437264 17519935492 537919760 
268436500 17801651200 68423761 5368742401 6448807697 -4008702191 4310765824 
-4008702080 4295049477 4630515712 -34325655791 4295098370 251658356 1314897 
5368709696 21038353 17180917776 5259588 21475098628 1314897 5368709165 328724 
18522046644 1314897 5368709376 336613652 212992 5385818432 4194324 4379983872 
54525972 4379983872 268440592 21764243458 17179951365 4630511632 21038353 
17179873280 5385818432 1048596 4379983872 63964125 328724 18522063940 537935872 
-34288679872 9665777936 2149580805 8420932 332802 2151956512 2147488768 
8594456576 4294967617 1360265232 -4293984254 15728913 134348800 21743304772 
17213456384 5435826180 8390656967 -8853896190 134218048 537154897 18740150277 
1094995968 166989824 5385818432 268443648 164626437 1094995968 17180410948 
604012544 17516724256 2446591241 -12884901808 17519935492 17895433 33554693 
1342210084 17213751619 -16642960384 4294967295 524302 786444 524376 786518 
1048847 1310989 1049258 1311400 525099 787241 1049481 1311623 525419 787561 
787903 1050045 526038 788180 526117 788259 526266 788408 526602 788744 526689 
788831 788926 1051068 789006 1051148 527057 789199 527100 789242 527176 789318 
527214 789356 527439 789581 789899 1052041 527797 789939 790030 1052172 528088 
790230 528140 790282 790336 1052478 790660 1052802 528557 790699 790757 1052899 
528685 790827 528981 791123 529303 791445 529379 791521 529415 791557 529451 
791593 529487 791629 792093 1054235 530019 792161 530062 792204 530105 792247 
792319 1054461 530217 792359 530519 792661 530565 792707 530615 792757 530655 
792797 530739 792881 530823 792965 793010 1055152 1055199 1317341 793124 1055266
793168 1055310 1055360 1317502 1055414 1317556 532337 794479 532407 794549 
532679 794821 794870 1057012 532766 794908 794964 1057106 795064 1057206 1057253
1319395 795156 1057298 1319557 1581699 1057460 1319602 795360 1057502 795399 
1057541 533397 795539 533434 795576 795689 1057831 271444 533586 1320065 1582207
1582283 1844425 1582376 1844518 533899 796041 533939 796081 533981 796123 534023
796165 534093 796235 534220 796362 534256 796398 272148 534290 272186 534328 
272220 534362 272262 534404 272304 534446 272342 534484 272376 534518 272410 
534552 10305 272447 10340 272482 10375 272517 10409 272551 10443 272585 10477 
272619 10511 272653 10545 272687 10579 272721 10613 272755 10647 272789 10681 
272823 10715 272857 10750 272892 10785 272927 10820 272962 10855 272997 273033 
535175 273075 535217 273117 535259 273155 535297 273197 535339 273329 535471 
273414 535556 273541 535683 535810 797952 536100 798242 536170 798312 798389 
1060531 798484 1060626 536433 798575 536493 798635 536561 798703 536636 798778 
536724 798866 799144 1061286 537074 799216 537190 799332 537231 799373 537293 
799435 537417 799559 537498 799640 799685 1061827 537763 799905 537869 800011 
537979 800121 538081 800223 800265 1062407 14288 276430 538605 800747 14400 
276542 800942 1063084 276742 538884 276776 538918 276813 538955 538994 801136 
276887 539029 276922 539064 539098 801240 276988 539130 539164 801306 277056 
539198 277088 539230 277122 539264 277154 539296 277186 539328 277218 539360 
801553 1063695 801756 1063898 539831 801973 802014 1064156 539921 802063 540027 
802169!]>> 

<SETG :ZEN$CURTYPE$TYPE :TYPESPEC> 

<PUTPROP :ZEN CURTYPE ,:ZEN$CURTYPE> 

<SETG :ZEN (:ZEN)> 

<SETG R$2620$2$0 '(:RECORD :NAME :TYPESPEC)> 

<SETG R$2620$3$0 '(:RECORD :INT :INT :INT)> 

"Pass 2 for ZEN done in 124.58257 seconds.
" 
